#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_39(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<39, sc_dt::sc_bv<39> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(2146);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(3979224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(3979448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(3979504);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(3979560);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(3979840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(3979896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(3979952);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(3980008);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(3980232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(3980288);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(3980344);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(3980456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(3980512);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(3980568);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(3980792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(3980848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(3980904);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(3980960);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(3981240);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(2147);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(3981624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(3981848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(3981904);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(3981960);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(3982240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(3982296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(3982352);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(3982408);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(3982520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(3982576);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(3982632);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(3982744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(3982800);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(3982856);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(3983080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(3983136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(3983192);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(3983248);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(3983528);
        sc_inst_3 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(2188);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(4019400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(4019624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(4019680);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(4019736);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(4020016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(4020072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(4020128);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(4020184);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(4020408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(4020464);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(4020520);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(4020632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(4020688);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(4020744);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(4020968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(4021024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(4021080);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(4021136);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(4021416);
        sc_inst_4 = new pfm_dynamic_m01_regslice_8(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(2189);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(4021800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(4022024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(4022080);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(4022136);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(4022416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(4022472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(4022528);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(4022584);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(4022696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(4022752);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(4022808);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(4022920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(4022976);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(4023032);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(4023256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(4023312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(4023368);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(4023424);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(4023704);
        sc_inst_5 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(2230);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(4060728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(4060952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(4061008);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(4061064);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(4061344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(4061400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(4061456);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(4061512);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(4061736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(4061792);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(4061848);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(4061960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(4062016);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(4062072);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(4062296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(4062352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(4062408);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(4062464);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(4062744);
        sc_inst_6 = new pfm_dynamic_m02_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(2231);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(4063128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(4063352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(4063408);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(4063464);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(4063744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(4063800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(4063856);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(4063912);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(4064024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(4064080);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(4064136);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(4064248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(4064304);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(4064360);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(4064584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(4064640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(4064696);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(4064752);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(4065032);
        sc_inst_7 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(2274);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(4100904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(4101128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(4101184);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(4101240);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(4101520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(4101576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(4101632);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(4101688);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(4101912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(4101968);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(4102024);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(4102136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(4102192);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(4102248);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(4102472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(4102528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(4102584);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(4102640);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(4102920);
        sc_inst_8 = new pfm_dynamic_m03_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(2275);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(4103304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(4103528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(4103584);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(4103640);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(4103920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(4103976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(4104032);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(4104088);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(4104200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(4104256);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(4104312);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(4104424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(4104480);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(4104536);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(4104760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(4104816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(4104872);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(4104928);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(4105208);
        sc_inst_9 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_9->xsim_set_dbg_index(2316);
        xsim_sc_channel<0, bool > *p_9_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->aclk.bind(*p_9_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_aclk);
        xsim_sc_channel<0, bool > *p_9_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->aresetn.bind(*p_9_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(4128848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(4129072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(4129128);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(4129184);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(4129464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(4129520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(4129576);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(4129632);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(4129744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(4129800);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(4129856);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(4129968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(4130024);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(4130080);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(4130304);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(4130360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(4130416);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(4130472);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(4130752);
        sc_inst_10 = new pfm_dynamic_xbar_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_10->xsim_set_dbg_index(1155);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(4131136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(4131360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(4131416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(4131472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(4131752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(4131808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(4131864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(4131920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_10_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(4132032);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_10_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(4132088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(4132144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_10_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(4132256);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(4132312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(4132368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(4132592);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_10_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(4132648);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_10_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(4132704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(4132760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_10_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(4133040);
        sc_inst_11 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_11->xsim_set_dbg_index(758);
        xsim_sc_channel<0, bool > *p_11_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_clk.bind(*p_11_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_11_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_aresetn.bind(*p_11_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_11_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_clk.bind(*p_11_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_clk);
        xsim_sc_channel<0, bool > *p_11_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_aresetn.bind(*p_11_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_aresetn);
        xsim_sc_channel<0, bool > *p_11_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->axilite_clk.bind(*p_11_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_axilite_clk);
        xsim_sc_channel<0, bool > *p_11_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->axilite_aresetn.bind(*p_11_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_11_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tready0.bind(*p_11_trace_tready0);
        p_11_trace_tready0->set_sv_netview_offsetfromdp(4133480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->trace_tdata0.bind(*p_11_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdata0);
        xsim_sc_channel<0, bool > *p_11_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tlast0.bind(*p_11_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tid0.bind(*p_11_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tdest0.bind(*p_11_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdest0);
        xsim_sc_channel<0, bool > *p_11_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tvalid0.bind(*p_11_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_11_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tready1.bind(*p_11_trace_tready1);
        p_11_trace_tready1->set_sv_netview_offsetfromdp(4133816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->trace_tdata1.bind(*p_11_trace_tdata1);
        p_11_trace_tdata1->set_sv_netview_offsetfromdp(4133872);
        xsim_sc_channel<0, bool > *p_11_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tlast1.bind(*p_11_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tid1.bind(*p_11_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tdest1.bind(*p_11_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdest1);
        xsim_sc_channel<0, bool > *p_11_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tvalid1.bind(*p_11_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->trace_tdata2.bind(*p_11_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdata2);
        xsim_sc_channel<0, bool > *p_11_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tready2.bind(*p_11_trace_tready2);
        p_11_trace_tready2->set_sv_netview_offsetfromdp(4134208);
        xsim_sc_channel<0, bool > *p_11_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tlast2.bind(*p_11_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tid2.bind(*p_11_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->trace_tdest2.bind(*p_11_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tdest2);
        xsim_sc_channel<0, bool > *p_11_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_11->trace_tvalid2.bind(*p_11_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_11_trace_tvalid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(4134600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(4134824);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(4134880);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(4134992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(4135160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(4135216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(4135272);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(4135328);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axihub_awaddr.bind(*p_11_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_11_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_awvalid.bind(*p_11_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_awready.bind(*p_11_s_axihub_awready);
        p_11_s_axihub_awready->set_sv_netview_offsetfromdp(4135552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axihub_wdata.bind(*p_11_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axihub_wstrb.bind(*p_11_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_wvalid.bind(*p_11_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_wready.bind(*p_11_s_axihub_wready);
        p_11_s_axihub_wready->set_sv_netview_offsetfromdp(4135776);
        xsim_sc_channel<0, bool > *p_11_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_bvalid.bind(*p_11_s_axihub_bvalid);
        p_11_s_axihub_bvalid->set_sv_netview_offsetfromdp(4135832);
        xsim_sc_channel<0, bool > *p_11_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_bready.bind(*p_11_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axihub_bresp.bind(*p_11_s_axihub_bresp);
        p_11_s_axihub_bresp->set_sv_netview_offsetfromdp(4135944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axihub_araddr.bind(*p_11_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_11_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_arvalid.bind(*p_11_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_arready.bind(*p_11_s_axihub_arready);
        p_11_s_axihub_arready->set_sv_netview_offsetfromdp(4136112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axihub_rdata.bind(*p_11_s_axihub_rdata);
        p_11_s_axihub_rdata->set_sv_netview_offsetfromdp(4136168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axihub_rresp.bind(*p_11_s_axihub_rresp);
        p_11_s_axihub_rresp->set_sv_netview_offsetfromdp(4136224);
        xsim_sc_channel<0, bool > *p_11_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_rvalid.bind(*p_11_s_axihub_rvalid);
        p_11_s_axihub_rvalid->set_sv_netview_offsetfromdp(4136280);
        xsim_sc_channel<0, bool > *p_11_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axihub_rready.bind(*p_11_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_aximm_awaddr.bind(*p_11_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_11_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_awvalid.bind(*p_11_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_awready.bind(*p_11_s_aximm_awready);
        p_11_s_aximm_awready->set_sv_netview_offsetfromdp(4136504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_aximm_awlen.bind(*p_11_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_aximm_awsize.bind(*p_11_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_aximm_awburst.bind(*p_11_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_aximm_awid.bind(*p_11_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_aximm_wdata.bind(*p_11_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_aximm_wstrb.bind(*p_11_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_wvalid.bind(*p_11_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_wready.bind(*p_11_s_aximm_wready);
        p_11_s_aximm_wready->set_sv_netview_offsetfromdp(4136952);
        xsim_sc_channel<0, bool > *p_11_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_bvalid.bind(*p_11_s_aximm_bvalid);
        p_11_s_aximm_bvalid->set_sv_netview_offsetfromdp(4137008);
        xsim_sc_channel<0, bool > *p_11_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_bready.bind(*p_11_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_11_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_wlast.bind(*p_11_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_11_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_rlast.bind(*p_11_s_aximm_rlast);
        p_11_s_aximm_rlast->set_sv_netview_offsetfromdp(4137176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_aximm_bresp.bind(*p_11_s_aximm_bresp);
        p_11_s_aximm_bresp->set_sv_netview_offsetfromdp(4137232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_aximm_bid.bind(*p_11_s_aximm_bid);
        p_11_s_aximm_bid->set_sv_netview_offsetfromdp(4137288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_aximm_araddr.bind(*p_11_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_11_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_arvalid.bind(*p_11_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_arready.bind(*p_11_s_aximm_arready);
        p_11_s_aximm_arready->set_sv_netview_offsetfromdp(4137456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_aximm_arlen.bind(*p_11_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_aximm_arsize.bind(*p_11_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_aximm_arburst.bind(*p_11_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_aximm_arid.bind(*p_11_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->s_aximm_rdata.bind(*p_11_s_aximm_rdata);
        p_11_s_aximm_rdata->set_sv_netview_offsetfromdp(4137736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_aximm_rid.bind(*p_11_s_aximm_rid);
        p_11_s_aximm_rid->set_sv_netview_offsetfromdp(4137792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_aximm_rresp.bind(*p_11_s_aximm_rresp);
        p_11_s_aximm_rresp->set_sv_netview_offsetfromdp(4137848);
        xsim_sc_channel<0, bool > *p_11_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_rvalid.bind(*p_11_s_aximm_rvalid);
        p_11_s_aximm_rvalid->set_sv_netview_offsetfromdp(4137904);
        xsim_sc_channel<0, bool > *p_11_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_aximm_rready.bind(*p_11_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_aximm_rready);
        sc_inst_12 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_12->xsim_set_dbg_index(759);
        xsim_sc_channel<0, bool > *p_12_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_clk.bind(*p_12_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_clk);
        xsim_sc_channel<0, bool > *p_12_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_resetn.bind(*p_12_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_resetn);
        xsim_sc_channel<0, bool > *p_12_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_12->trace_clk.bind(*p_12_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_trace_clk);
        xsim_sc_channel<0, bool > *p_12_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_12->trace_rst.bind(*p_12_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(4138456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(4138680);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(4138736);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(4138848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(4139072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(4139128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(4139184);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(4139240);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<0, bool > *p_12_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_AWVALID.bind(*p_12_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_12_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_AWREADY.bind(*p_12_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->mon_AWADDR.bind(*p_12_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_12_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_WVALID.bind(*p_12_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WVALID);
        xsim_sc_channel<0, bool > *p_12_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_WREADY.bind(*p_12_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->mon_WDATA.bind(*p_12_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->mon_WSTRB.bind(*p_12_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_12_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_ARVALID.bind(*p_12_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_12_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_ARREADY.bind(*p_12_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->mon_ARADDR.bind(*p_12_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_12_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_RVALID.bind(*p_12_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RVALID);
        xsim_sc_channel<0, bool > *p_12_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_RREADY.bind(*p_12_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->mon_RDATA.bind(*p_12_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->mon_RRESP.bind(*p_12_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_RRESP);
        xsim_sc_channel<0, bool > *p_12_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_BVALID.bind(*p_12_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_BVALID);
        xsim_sc_channel<0, bool > *p_12_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_12->mon_BREADY.bind(*p_12_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->mon_BRESP.bind(*p_12_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_12_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m_axis_tready.bind(*p_12_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m_axis_tdata.bind(*p_12_m_axis_tdata);
        p_12_m_axis_tdata->set_sv_netview_offsetfromdp(4140360);
        xsim_sc_channel<0, bool > *p_12_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axis_tlast.bind(*p_12_m_axis_tlast);
        p_12_m_axis_tlast->set_sv_netview_offsetfromdp(4140416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axis_tid.bind(*p_12_m_axis_tid);
        p_12_m_axis_tid->set_sv_netview_offsetfromdp(4140472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axis_tdest.bind(*p_12_m_axis_tdest);
        p_12_m_axis_tdest->set_sv_netview_offsetfromdp(4140528);
        xsim_sc_channel<0, bool > *p_12_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axis_tvalid.bind(*p_12_m_axis_tvalid);
        p_12_m_axis_tvalid->set_sv_netview_offsetfromdp(4140584);
        xsim_sc_channel<0, bool > *p_12_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_12->ap_continue.bind(*p_12_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_12_ap_continue);
        xsim_sc_channel<0, bool > *p_12_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_12->ap_ready.bind(*p_12_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_ap_ready);
        xsim_sc_channel<0, bool > *p_12_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_12->ap_start.bind(*p_12_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_12_ap_start);
        xsim_sc_channel<0, bool > *p_12_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_12->ap_idle.bind(*p_12_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_12_ap_idle);
        xsim_sc_channel<0, bool > *p_12_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_12->ap_done.bind(*p_12_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_12_ap_done);
        sc_inst_13 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_13->xsim_set_dbg_index(760);
        xsim_sc_channel<0, bool > *p_13_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_clk.bind(*p_13_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_clk);
        xsim_sc_channel<0, bool > *p_13_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_resetn.bind(*p_13_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_resetn);
        xsim_sc_channel<0, bool > *p_13_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_clk.bind(*p_13_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_clk);
        xsim_sc_channel<0, bool > *p_13_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_13->trace_rst.bind(*p_13_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(4141304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(4141528);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(4141584);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(4141696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(4141864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(4141920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(4141976);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(4142032);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<0, bool > *p_13_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_AWVALID.bind(*p_13_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_13_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_AWREADY.bind(*p_13_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->mon_AWADDR.bind(*p_13_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->mon_AWID.bind(*p_13_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->mon_AWLEN.bind(*p_13_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->mon_AWSIZE.bind(*p_13_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->mon_AWBURST.bind(*p_13_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_13_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_WVALID.bind(*p_13_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WVALID);
        xsim_sc_channel<0, bool > *p_13_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_WREADY.bind(*p_13_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->mon_WDATA.bind(*p_13_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->mon_WSTRB.bind(*p_13_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_13_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_WLAST.bind(*p_13_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_WLAST);
        xsim_sc_channel<0, bool > *p_13_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_ARVALID.bind(*p_13_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_13_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_ARREADY.bind(*p_13_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->mon_ARADDR.bind(*p_13_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->mon_ARID.bind(*p_13_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->mon_ARLEN.bind(*p_13_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->mon_ARSIZE.bind(*p_13_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->mon_ARBURST.bind(*p_13_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_13_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_RVALID.bind(*p_13_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RVALID);
        xsim_sc_channel<0, bool > *p_13_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_RREADY.bind(*p_13_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->mon_RDATA.bind(*p_13_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RDATA);
        xsim_sc_channel<0, bool > *p_13_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_RLAST.bind(*p_13_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->mon_RID.bind(*p_13_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->mon_RRESP.bind(*p_13_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_RRESP);
        xsim_sc_channel<0, bool > *p_13_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_BVALID.bind(*p_13_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_BVALID);
        xsim_sc_channel<0, bool > *p_13_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_13->mon_BREADY.bind(*p_13_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->mon_BRESP.bind(*p_13_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->mon_BID.bind(*p_13_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_13_mon_BID);
        xsim_sc_channel<0, bool > *p_13_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_rd_tready.bind(*p_13_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axis_rd_tdata.bind(*p_13_m_axis_rd_tdata);
        p_13_m_axis_rd_tdata->set_sv_netview_offsetfromdp(4143824);
        xsim_sc_channel<0, bool > *p_13_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_rd_tlast.bind(*p_13_m_axis_rd_tlast);
        p_13_m_axis_rd_tlast->set_sv_netview_offsetfromdp(4143880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axis_rd_tid.bind(*p_13_m_axis_rd_tid);
        p_13_m_axis_rd_tid->set_sv_netview_offsetfromdp(4143936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axis_rd_tdest.bind(*p_13_m_axis_rd_tdest);
        p_13_m_axis_rd_tdest->set_sv_netview_offsetfromdp(4143992);
        xsim_sc_channel<0, bool > *p_13_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_wr_tready.bind(*p_13_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m_axis_wr_tdata.bind(*p_13_m_axis_wr_tdata);
        p_13_m_axis_wr_tdata->set_sv_netview_offsetfromdp(4144104);
        xsim_sc_channel<0, bool > *p_13_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_wr_tlast.bind(*p_13_m_axis_wr_tlast);
        p_13_m_axis_wr_tlast->set_sv_netview_offsetfromdp(4144160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axis_wr_tid.bind(*p_13_m_axis_wr_tid);
        p_13_m_axis_wr_tid->set_sv_netview_offsetfromdp(4144216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axis_wr_tdest.bind(*p_13_m_axis_wr_tdest);
        p_13_m_axis_wr_tdest->set_sv_netview_offsetfromdp(4144272);
        xsim_sc_channel<0, bool > *p_13_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_wr_tvalid.bind(*p_13_m_axis_wr_tvalid);
        p_13_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(4144328);
        xsim_sc_channel<0, bool > *p_13_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axis_rd_tvalid.bind(*p_13_m_axis_rd_tvalid);
        p_13_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(4144384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr_mon.bind(*p_13_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot_mon.bind(*p_13_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid_mon.bind(*p_13_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready_mon.bind(*p_13_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata_mon.bind(*p_13_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb_mon.bind(*p_13_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid_mon.bind(*p_13_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready_mon.bind(*p_13_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp_mon.bind(*p_13_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid_mon.bind(*p_13_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready_mon.bind(*p_13_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr_mon.bind(*p_13_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot_mon.bind(*p_13_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid_mon.bind(*p_13_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready_mon.bind(*p_13_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata_mon.bind(*p_13_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp_mon.bind(*p_13_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid_mon.bind(*p_13_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready_mon.bind(*p_13_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready_mon);
        sc_inst_14 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_14->xsim_set_dbg_index(58);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->dout.bind(*p_14_dout);
        p_14_dout->set_sv_netview_offsetfromdp(4319784);
        sc_inst_15 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_15->xsim_set_dbg_index(1471);
        sc_inst_16 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_16->xsim_set_dbg_index(2860);
        xsim_sc_channel<0, bool > *p_16_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->aclk.bind(*p_16_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aclk);
        xsim_sc_channel<0, bool > *p_16_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_16->aclk1.bind(*p_16_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aclk1);
        xsim_sc_channel<0, bool > *p_16_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->aresetn.bind(*p_16_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_16_S00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_16->S00_AXI_awaddr.bind(*p_16_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->S00_AXI_awlen.bind(*p_16_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S00_AXI_awsize.bind(*p_16_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S00_AXI_awburst.bind(*p_16_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S00_AXI_awlock.bind(*p_16_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_awcache.bind(*p_16_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S00_AXI_awprot.bind(*p_16_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_awqos.bind(*p_16_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_awvalid.bind(*p_16_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_awready.bind(*p_16_S00_AXI_awready);
        p_16_S00_AXI_awready->set_sv_netview_offsetfromdp(4842144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->S00_AXI_wdata.bind(*p_16_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_wstrb.bind(*p_16_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_wlast.bind(*p_16_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_wvalid.bind(*p_16_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_wready.bind(*p_16_S00_AXI_wready);
        p_16_S00_AXI_wready->set_sv_netview_offsetfromdp(4842424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S00_AXI_bresp.bind(*p_16_S00_AXI_bresp);
        p_16_S00_AXI_bresp->set_sv_netview_offsetfromdp(4842480);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_bvalid.bind(*p_16_S00_AXI_bvalid);
        p_16_S00_AXI_bvalid->set_sv_netview_offsetfromdp(4842536);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_bready.bind(*p_16_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_16_S00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_16->S00_AXI_araddr.bind(*p_16_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->S00_AXI_arlen.bind(*p_16_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S00_AXI_arsize.bind(*p_16_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S00_AXI_arburst.bind(*p_16_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S00_AXI_arlock.bind(*p_16_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_arcache.bind(*p_16_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S00_AXI_arprot.bind(*p_16_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S00_AXI_arqos.bind(*p_16_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_arvalid.bind(*p_16_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_arready.bind(*p_16_S00_AXI_arready);
        p_16_S00_AXI_arready->set_sv_netview_offsetfromdp(4843152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->S00_AXI_rdata.bind(*p_16_S00_AXI_rdata);
        p_16_S00_AXI_rdata->set_sv_netview_offsetfromdp(4843208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S00_AXI_rresp.bind(*p_16_S00_AXI_rresp);
        p_16_S00_AXI_rresp->set_sv_netview_offsetfromdp(4843264);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_rlast.bind(*p_16_S00_AXI_rlast);
        p_16_S00_AXI_rlast->set_sv_netview_offsetfromdp(4843320);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_rvalid.bind(*p_16_S00_AXI_rvalid);
        p_16_S00_AXI_rvalid->set_sv_netview_offsetfromdp(4843376);
        xsim_sc_channel<0, bool > *p_16_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S00_AXI_rready.bind(*p_16_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S01_AXI_awid.bind(*p_16_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->S01_AXI_awaddr.bind(*p_16_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->S01_AXI_awlen.bind(*p_16_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S01_AXI_awsize.bind(*p_16_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S01_AXI_awburst.bind(*p_16_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S01_AXI_awlock.bind(*p_16_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S01_AXI_awcache.bind(*p_16_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S01_AXI_awprot.bind(*p_16_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S01_AXI_awqos.bind(*p_16_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awqos);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_awvalid.bind(*p_16_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_awready.bind(*p_16_S01_AXI_awready);
        p_16_S01_AXI_awready->set_sv_netview_offsetfromdp(4844048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->S01_AXI_wdata.bind(*p_16_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S01_AXI_wstrb.bind(*p_16_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_wlast.bind(*p_16_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_wlast);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_wvalid.bind(*p_16_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_wready.bind(*p_16_S01_AXI_wready);
        p_16_S01_AXI_wready->set_sv_netview_offsetfromdp(4844328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S01_AXI_bid.bind(*p_16_S01_AXI_bid);
        p_16_S01_AXI_bid->set_sv_netview_offsetfromdp(4844384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S01_AXI_bresp.bind(*p_16_S01_AXI_bresp);
        p_16_S01_AXI_bresp->set_sv_netview_offsetfromdp(4844440);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_bvalid.bind(*p_16_S01_AXI_bvalid);
        p_16_S01_AXI_bvalid->set_sv_netview_offsetfromdp(4844496);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_bready.bind(*p_16_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S01_AXI_arid.bind(*p_16_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->S01_AXI_araddr.bind(*p_16_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->S01_AXI_arlen.bind(*p_16_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S01_AXI_arsize.bind(*p_16_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S01_AXI_arburst.bind(*p_16_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S01_AXI_arlock.bind(*p_16_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S01_AXI_arcache.bind(*p_16_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->S01_AXI_arprot.bind(*p_16_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->S01_AXI_arqos.bind(*p_16_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arqos);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_arvalid.bind(*p_16_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_arready.bind(*p_16_S01_AXI_arready);
        p_16_S01_AXI_arready->set_sv_netview_offsetfromdp(4845168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->S01_AXI_rid.bind(*p_16_S01_AXI_rid);
        p_16_S01_AXI_rid->set_sv_netview_offsetfromdp(4845224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->S01_AXI_rdata.bind(*p_16_S01_AXI_rdata);
        p_16_S01_AXI_rdata->set_sv_netview_offsetfromdp(4845280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->S01_AXI_rresp.bind(*p_16_S01_AXI_rresp);
        p_16_S01_AXI_rresp->set_sv_netview_offsetfromdp(4845336);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_rlast.bind(*p_16_S01_AXI_rlast);
        p_16_S01_AXI_rlast->set_sv_netview_offsetfromdp(4845392);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_rvalid.bind(*p_16_S01_AXI_rvalid);
        p_16_S01_AXI_rvalid->set_sv_netview_offsetfromdp(4845448);
        xsim_sc_channel<0, bool > *p_16_S01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->S01_AXI_rready.bind(*p_16_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_S01_AXI_rready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_16_M00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_16->M00_AXI_awaddr.bind(*p_16_M00_AXI_awaddr);
        p_16_M00_AXI_awaddr->set_sv_netview_offsetfromdp(4845560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->M00_AXI_awlen.bind(*p_16_M00_AXI_awlen);
        p_16_M00_AXI_awlen->set_sv_netview_offsetfromdp(4845616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->M00_AXI_awsize.bind(*p_16_M00_AXI_awsize);
        p_16_M00_AXI_awsize->set_sv_netview_offsetfromdp(4845672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_awburst.bind(*p_16_M00_AXI_awburst);
        p_16_M00_AXI_awburst->set_sv_netview_offsetfromdp(4845728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->M00_AXI_awlock.bind(*p_16_M00_AXI_awlock);
        p_16_M00_AXI_awlock->set_sv_netview_offsetfromdp(4845784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_awcache.bind(*p_16_M00_AXI_awcache);
        p_16_M00_AXI_awcache->set_sv_netview_offsetfromdp(4845840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->M00_AXI_awprot.bind(*p_16_M00_AXI_awprot);
        p_16_M00_AXI_awprot->set_sv_netview_offsetfromdp(4845896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_awqos.bind(*p_16_M00_AXI_awqos);
        p_16_M00_AXI_awqos->set_sv_netview_offsetfromdp(4845952);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_awvalid.bind(*p_16_M00_AXI_awvalid);
        p_16_M00_AXI_awvalid->set_sv_netview_offsetfromdp(4846008);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_awready.bind(*p_16_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->M00_AXI_wdata.bind(*p_16_M00_AXI_wdata);
        p_16_M00_AXI_wdata->set_sv_netview_offsetfromdp(4846120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->M00_AXI_wstrb.bind(*p_16_M00_AXI_wstrb);
        p_16_M00_AXI_wstrb->set_sv_netview_offsetfromdp(4846176);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_wlast.bind(*p_16_M00_AXI_wlast);
        p_16_M00_AXI_wlast->set_sv_netview_offsetfromdp(4846232);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_wvalid.bind(*p_16_M00_AXI_wvalid);
        p_16_M00_AXI_wvalid->set_sv_netview_offsetfromdp(4846288);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_wready.bind(*p_16_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_bresp.bind(*p_16_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_bvalid.bind(*p_16_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_bready.bind(*p_16_M00_AXI_bready);
        p_16_M00_AXI_bready->set_sv_netview_offsetfromdp(4846512);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_16_M00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_16->M00_AXI_araddr.bind(*p_16_M00_AXI_araddr);
        p_16_M00_AXI_araddr->set_sv_netview_offsetfromdp(4846568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->M00_AXI_arlen.bind(*p_16_M00_AXI_arlen);
        p_16_M00_AXI_arlen->set_sv_netview_offsetfromdp(4846624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->M00_AXI_arsize.bind(*p_16_M00_AXI_arsize);
        p_16_M00_AXI_arsize->set_sv_netview_offsetfromdp(4846680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_arburst.bind(*p_16_M00_AXI_arburst);
        p_16_M00_AXI_arburst->set_sv_netview_offsetfromdp(4846736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->M00_AXI_arlock.bind(*p_16_M00_AXI_arlock);
        p_16_M00_AXI_arlock->set_sv_netview_offsetfromdp(4846792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_arcache.bind(*p_16_M00_AXI_arcache);
        p_16_M00_AXI_arcache->set_sv_netview_offsetfromdp(4846848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->M00_AXI_arprot.bind(*p_16_M00_AXI_arprot);
        p_16_M00_AXI_arprot->set_sv_netview_offsetfromdp(4846904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->M00_AXI_arqos.bind(*p_16_M00_AXI_arqos);
        p_16_M00_AXI_arqos->set_sv_netview_offsetfromdp(4846960);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_arvalid.bind(*p_16_M00_AXI_arvalid);
        p_16_M00_AXI_arvalid->set_sv_netview_offsetfromdp(4847016);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_arready.bind(*p_16_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->M00_AXI_rdata.bind(*p_16_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->M00_AXI_rresp.bind(*p_16_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_rlast.bind(*p_16_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_rvalid.bind(*p_16_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_16_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->M00_AXI_rready.bind(*p_16_M00_AXI_rready);
        p_16_M00_AXI_rready->set_sv_netview_offsetfromdp(4847352);
        sc_inst_17 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_17->xsim_set_dbg_index(2861);
        xsim_sc_channel<0, bool > *p_17_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->aclk.bind(*p_17_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_aclk);
        xsim_sc_channel<0, bool > *p_17_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->aresetn.bind(*p_17_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_17_s_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awlen.bind(*p_17_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awsize.bind(*p_17_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_awburst.bind(*p_17_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_awlock.bind(*p_17_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awcache.bind(*p_17_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot.bind(*p_17_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awregion.bind(*p_17_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awqos.bind(*p_17_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(4848128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wlast.bind(*p_17_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(4848408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(4848464);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(4848520);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_17_s_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_arlen.bind(*p_17_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arsize.bind(*p_17_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_arburst.bind(*p_17_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_arlock.bind(*p_17_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arcache.bind(*p_17_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot.bind(*p_17_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arregion.bind(*p_17_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arqos.bind(*p_17_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(4849192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(4849248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(4849304);
        xsim_sc_channel<0, bool > *p_17_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rlast.bind(*p_17_s_axi_rlast);
        p_17_s_axi_rlast->set_sv_netview_offsetfromdp(4849360);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(4849416);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_17_m_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_17->m_axi_awaddr.bind(*p_17_m_axi_awaddr);
        p_17_m_axi_awaddr->set_sv_netview_offsetfromdp(4849528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_awlen.bind(*p_17_m_axi_awlen);
        p_17_m_axi_awlen->set_sv_netview_offsetfromdp(4849584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awsize.bind(*p_17_m_axi_awsize);
        p_17_m_axi_awsize->set_sv_netview_offsetfromdp(4849640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_awburst.bind(*p_17_m_axi_awburst);
        p_17_m_axi_awburst->set_sv_netview_offsetfromdp(4849696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_awlock.bind(*p_17_m_axi_awlock);
        p_17_m_axi_awlock->set_sv_netview_offsetfromdp(4849752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awcache.bind(*p_17_m_axi_awcache);
        p_17_m_axi_awcache->set_sv_netview_offsetfromdp(4849808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awprot.bind(*p_17_m_axi_awprot);
        p_17_m_axi_awprot->set_sv_netview_offsetfromdp(4849864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awregion.bind(*p_17_m_axi_awregion);
        p_17_m_axi_awregion->set_sv_netview_offsetfromdp(4849920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_awqos.bind(*p_17_m_axi_awqos);
        p_17_m_axi_awqos->set_sv_netview_offsetfromdp(4849976);
        xsim_sc_channel<0, bool > *p_17_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awvalid.bind(*p_17_m_axi_awvalid);
        p_17_m_axi_awvalid->set_sv_netview_offsetfromdp(4850032);
        xsim_sc_channel<0, bool > *p_17_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awready.bind(*p_17_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m_axi_wdata.bind(*p_17_m_axi_wdata);
        p_17_m_axi_wdata->set_sv_netview_offsetfromdp(4850144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_wstrb.bind(*p_17_m_axi_wstrb);
        p_17_m_axi_wstrb->set_sv_netview_offsetfromdp(4850200);
        xsim_sc_channel<0, bool > *p_17_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wlast.bind(*p_17_m_axi_wlast);
        p_17_m_axi_wlast->set_sv_netview_offsetfromdp(4850256);
        xsim_sc_channel<0, bool > *p_17_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wvalid.bind(*p_17_m_axi_wvalid);
        p_17_m_axi_wvalid->set_sv_netview_offsetfromdp(4850312);
        xsim_sc_channel<0, bool > *p_17_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wready.bind(*p_17_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_bresp.bind(*p_17_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bvalid.bind(*p_17_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bready.bind(*p_17_m_axi_bready);
        p_17_m_axi_bready->set_sv_netview_offsetfromdp(4850536);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_17_m_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_17->m_axi_araddr.bind(*p_17_m_axi_araddr);
        p_17_m_axi_araddr->set_sv_netview_offsetfromdp(4850592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_arlen.bind(*p_17_m_axi_arlen);
        p_17_m_axi_arlen->set_sv_netview_offsetfromdp(4850648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arsize.bind(*p_17_m_axi_arsize);
        p_17_m_axi_arsize->set_sv_netview_offsetfromdp(4850704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_arburst.bind(*p_17_m_axi_arburst);
        p_17_m_axi_arburst->set_sv_netview_offsetfromdp(4850760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_arlock.bind(*p_17_m_axi_arlock);
        p_17_m_axi_arlock->set_sv_netview_offsetfromdp(4850816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arcache.bind(*p_17_m_axi_arcache);
        p_17_m_axi_arcache->set_sv_netview_offsetfromdp(4850872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arprot.bind(*p_17_m_axi_arprot);
        p_17_m_axi_arprot->set_sv_netview_offsetfromdp(4850928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arregion.bind(*p_17_m_axi_arregion);
        p_17_m_axi_arregion->set_sv_netview_offsetfromdp(4850984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_arqos.bind(*p_17_m_axi_arqos);
        p_17_m_axi_arqos->set_sv_netview_offsetfromdp(4851040);
        xsim_sc_channel<0, bool > *p_17_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arvalid.bind(*p_17_m_axi_arvalid);
        p_17_m_axi_arvalid->set_sv_netview_offsetfromdp(4851096);
        xsim_sc_channel<0, bool > *p_17_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arready.bind(*p_17_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m_axi_rdata.bind(*p_17_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_rresp.bind(*p_17_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rlast.bind(*p_17_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_17_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rvalid.bind(*p_17_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rready.bind(*p_17_m_axi_rready);
        p_17_m_axi_rready->set_sv_netview_offsetfromdp(4851432);
        sc_inst_18 = new bd_d216_calib_const_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.calib_const");
        sc_inst_18->xsim_set_dbg_index(2970);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->dout.bind(*p_18_dout);
        p_18_dout->set_sv_netview_offsetfromdp(4861792);
        sc_inst_19 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_19->xsim_set_dbg_index(65);
        sc_inst_20 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_20->xsim_set_dbg_index(66);
        xsim_sc_channel<0, bool > *p_20_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk.bind(*p_20_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk);
        xsim_sc_channel<0, bool > *p_20_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->aresetn.bind(*p_20_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_awlen.bind(*p_20_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_awburst.bind(*p_20_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s_axi_awlock.bind(*p_20_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awcache.bind(*p_20_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_awqos.bind(*p_20_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(5063280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wlast.bind(*p_20_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(5063560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(5063616);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(5063672);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_arlen.bind(*p_20_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_arburst.bind(*p_20_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s_axi_arlock.bind(*p_20_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arcache.bind(*p_20_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_arqos.bind(*p_20_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(5064232);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(5064288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(5064344);
        xsim_sc_channel<0, bool > *p_20_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rlast.bind(*p_20_s_axi_rlast);
        p_20_s_axi_rlast->set_sv_netview_offsetfromdp(5064400);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(5064456);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(5064568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_awlen.bind(*p_20_m_axi_awlen);
        p_20_m_axi_awlen->set_sv_netview_offsetfromdp(5064624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_awburst.bind(*p_20_m_axi_awburst);
        p_20_m_axi_awburst->set_sv_netview_offsetfromdp(5064680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_awlock.bind(*p_20_m_axi_awlock);
        p_20_m_axi_awlock->set_sv_netview_offsetfromdp(5064736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awcache.bind(*p_20_m_axi_awcache);
        p_20_m_axi_awcache->set_sv_netview_offsetfromdp(5064792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(5064848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_awqos.bind(*p_20_m_axi_awqos);
        p_20_m_axi_awqos->set_sv_netview_offsetfromdp(5064904);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(5064960);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(5065072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(5065128);
        xsim_sc_channel<0, bool > *p_20_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wlast.bind(*p_20_m_axi_wlast);
        p_20_m_axi_wlast->set_sv_netview_offsetfromdp(5065184);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(5065240);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(5065464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(5065520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_arlen.bind(*p_20_m_axi_arlen);
        p_20_m_axi_arlen->set_sv_netview_offsetfromdp(5065576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_arburst.bind(*p_20_m_axi_arburst);
        p_20_m_axi_arburst->set_sv_netview_offsetfromdp(5065632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_arlock.bind(*p_20_m_axi_arlock);
        p_20_m_axi_arlock->set_sv_netview_offsetfromdp(5065688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arcache.bind(*p_20_m_axi_arcache);
        p_20_m_axi_arcache->set_sv_netview_offsetfromdp(5065744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(5065800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_arqos.bind(*p_20_m_axi_arqos);
        p_20_m_axi_arqos->set_sv_netview_offsetfromdp(5065856);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(5065912);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rlast.bind(*p_20_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(5066248);
        sc_inst_21 = new pfm_dynamic_m01_regslice_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_21->xsim_set_dbg_index(3159);
        xsim_sc_channel<0, bool > *p_21_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->aclk.bind(*p_21_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aclk);
        xsim_sc_channel<0, bool > *p_21_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->aresetn.bind(*p_21_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->s_axi_awaddr.bind(*p_21_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_awprot.bind(*p_21_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awvalid.bind(*p_21_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awready.bind(*p_21_s_axi_awready);
        p_21_s_axi_awready->set_sv_netview_offsetfromdp(5328104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_wdata.bind(*p_21_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_wstrb.bind(*p_21_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_21_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wvalid.bind(*p_21_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wready.bind(*p_21_s_axi_wready);
        p_21_s_axi_wready->set_sv_netview_offsetfromdp(5328328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_bresp.bind(*p_21_s_axi_bresp);
        p_21_s_axi_bresp->set_sv_netview_offsetfromdp(5328384);
        xsim_sc_channel<0, bool > *p_21_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bvalid.bind(*p_21_s_axi_bvalid);
        p_21_s_axi_bvalid->set_sv_netview_offsetfromdp(5328440);
        xsim_sc_channel<0, bool > *p_21_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bready.bind(*p_21_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->s_axi_araddr.bind(*p_21_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_arprot.bind(*p_21_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arvalid.bind(*p_21_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arready.bind(*p_21_s_axi_arready);
        p_21_s_axi_arready->set_sv_netview_offsetfromdp(5328720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_rdata.bind(*p_21_s_axi_rdata);
        p_21_s_axi_rdata->set_sv_netview_offsetfromdp(5328776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_rresp.bind(*p_21_s_axi_rresp);
        p_21_s_axi_rresp->set_sv_netview_offsetfromdp(5328832);
        xsim_sc_channel<0, bool > *p_21_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rvalid.bind(*p_21_s_axi_rvalid);
        p_21_s_axi_rvalid->set_sv_netview_offsetfromdp(5328888);
        xsim_sc_channel<0, bool > *p_21_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rready.bind(*p_21_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_awaddr.bind(*p_21_m_axi_awaddr);
        p_21_m_axi_awaddr->set_sv_netview_offsetfromdp(5329000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_awprot.bind(*p_21_m_axi_awprot);
        p_21_m_axi_awprot->set_sv_netview_offsetfromdp(5329056);
        xsim_sc_channel<0, bool > *p_21_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awvalid.bind(*p_21_m_axi_awvalid);
        p_21_m_axi_awvalid->set_sv_netview_offsetfromdp(5329112);
        xsim_sc_channel<0, bool > *p_21_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awready.bind(*p_21_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_wdata.bind(*p_21_m_axi_wdata);
        p_21_m_axi_wdata->set_sv_netview_offsetfromdp(5329224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_wstrb.bind(*p_21_m_axi_wstrb);
        p_21_m_axi_wstrb->set_sv_netview_offsetfromdp(5329280);
        xsim_sc_channel<0, bool > *p_21_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wvalid.bind(*p_21_m_axi_wvalid);
        p_21_m_axi_wvalid->set_sv_netview_offsetfromdp(5329336);
        xsim_sc_channel<0, bool > *p_21_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wready.bind(*p_21_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_bresp.bind(*p_21_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bvalid.bind(*p_21_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bready.bind(*p_21_m_axi_bready);
        p_21_m_axi_bready->set_sv_netview_offsetfromdp(5329560);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_araddr.bind(*p_21_m_axi_araddr);
        p_21_m_axi_araddr->set_sv_netview_offsetfromdp(5329616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_arprot.bind(*p_21_m_axi_arprot);
        p_21_m_axi_arprot->set_sv_netview_offsetfromdp(5329672);
        xsim_sc_channel<0, bool > *p_21_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arvalid.bind(*p_21_m_axi_arvalid);
        p_21_m_axi_arvalid->set_sv_netview_offsetfromdp(5329728);
        xsim_sc_channel<0, bool > *p_21_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arready.bind(*p_21_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_rdata.bind(*p_21_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_rresp.bind(*p_21_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rvalid.bind(*p_21_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rready.bind(*p_21_m_axi_rready);
        p_21_m_axi_rready->set_sv_netview_offsetfromdp(5330008);
        sc_inst_22 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_22->xsim_set_dbg_index(1663);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(5340568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(5340792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(5340848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(5340904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(5341184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(5341240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(5341296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(5341352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_22_m_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(5341464);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(5341520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(5341576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(5341688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(5341744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(5341800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(5342024);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_22_m_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(5342080);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(5342136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(5342192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(5342472);
        sc_inst_23 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.m01_couplers.auto_cc");
        sc_inst_23->xsim_set_dbg_index(3356);
        xsim_sc_channel<0, bool > *p_23_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_aclk.bind(*p_23_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_23_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_aresetn.bind(*p_23_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_23_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_23->s_axi_awaddr.bind(*p_23_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awprot.bind(*p_23_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_23_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awvalid.bind(*p_23_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awready.bind(*p_23_s_axi_awready);
        p_23_s_axi_awready->set_sv_netview_offsetfromdp(5835632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_wdata.bind(*p_23_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_wstrb.bind(*p_23_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wvalid.bind(*p_23_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wready.bind(*p_23_s_axi_wready);
        p_23_s_axi_wready->set_sv_netview_offsetfromdp(5835856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_bresp.bind(*p_23_s_axi_bresp);
        p_23_s_axi_bresp->set_sv_netview_offsetfromdp(5835912);
        xsim_sc_channel<0, bool > *p_23_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bvalid.bind(*p_23_s_axi_bvalid);
        p_23_s_axi_bvalid->set_sv_netview_offsetfromdp(5835968);
        xsim_sc_channel<0, bool > *p_23_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bready.bind(*p_23_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_23_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_23->s_axi_araddr.bind(*p_23_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arprot.bind(*p_23_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_23_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arvalid.bind(*p_23_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arready.bind(*p_23_s_axi_arready);
        p_23_s_axi_arready->set_sv_netview_offsetfromdp(5836248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_rdata.bind(*p_23_s_axi_rdata);
        p_23_s_axi_rdata->set_sv_netview_offsetfromdp(5836304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_rresp.bind(*p_23_s_axi_rresp);
        p_23_s_axi_rresp->set_sv_netview_offsetfromdp(5836360);
        xsim_sc_channel<0, bool > *p_23_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rvalid.bind(*p_23_s_axi_rvalid);
        p_23_s_axi_rvalid->set_sv_netview_offsetfromdp(5836416);
        xsim_sc_channel<0, bool > *p_23_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rready.bind(*p_23_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_rready);
        xsim_sc_channel<0, bool > *p_23_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_aclk.bind(*p_23_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_23_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_aresetn.bind(*p_23_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_23_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_23->m_axi_awaddr.bind(*p_23_m_axi_awaddr);
        p_23_m_axi_awaddr->set_sv_netview_offsetfromdp(5836640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awprot.bind(*p_23_m_axi_awprot);
        p_23_m_axi_awprot->set_sv_netview_offsetfromdp(5836696);
        xsim_sc_channel<0, bool > *p_23_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awvalid.bind(*p_23_m_axi_awvalid);
        p_23_m_axi_awvalid->set_sv_netview_offsetfromdp(5836752);
        xsim_sc_channel<0, bool > *p_23_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awready.bind(*p_23_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_wdata.bind(*p_23_m_axi_wdata);
        p_23_m_axi_wdata->set_sv_netview_offsetfromdp(5836864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_wstrb.bind(*p_23_m_axi_wstrb);
        p_23_m_axi_wstrb->set_sv_netview_offsetfromdp(5836920);
        xsim_sc_channel<0, bool > *p_23_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wvalid.bind(*p_23_m_axi_wvalid);
        p_23_m_axi_wvalid->set_sv_netview_offsetfromdp(5836976);
        xsim_sc_channel<0, bool > *p_23_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wready.bind(*p_23_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_bresp.bind(*p_23_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bvalid.bind(*p_23_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bready.bind(*p_23_m_axi_bready);
        p_23_m_axi_bready->set_sv_netview_offsetfromdp(5837200);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_23_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_23->m_axi_araddr.bind(*p_23_m_axi_araddr);
        p_23_m_axi_araddr->set_sv_netview_offsetfromdp(5837256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arprot.bind(*p_23_m_axi_arprot);
        p_23_m_axi_arprot->set_sv_netview_offsetfromdp(5837312);
        xsim_sc_channel<0, bool > *p_23_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arvalid.bind(*p_23_m_axi_arvalid);
        p_23_m_axi_arvalid->set_sv_netview_offsetfromdp(5837368);
        xsim_sc_channel<0, bool > *p_23_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arready.bind(*p_23_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_rdata.bind(*p_23_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_rresp.bind(*p_23_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rvalid.bind(*p_23_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rready.bind(*p_23_m_axi_rready);
        p_23_m_axi_rready->set_sv_netview_offsetfromdp(5837648);
        sc_inst_24 = new pfm_dynamic_m01_regslice_7(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.m01_couplers.m01_regslice");
        sc_inst_24->xsim_set_dbg_index(3357);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->s_axi_awaddr.bind(*p_24_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awprot.bind(*p_24_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_24_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awvalid.bind(*p_24_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_awready.bind(*p_24_s_axi_awready);
        p_24_s_axi_awready->set_sv_netview_offsetfromdp(5838032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_wdata.bind(*p_24_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_wstrb.bind(*p_24_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_24_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wvalid.bind(*p_24_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_wready.bind(*p_24_s_axi_wready);
        p_24_s_axi_wready->set_sv_netview_offsetfromdp(5838256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_bresp.bind(*p_24_s_axi_bresp);
        p_24_s_axi_bresp->set_sv_netview_offsetfromdp(5838312);
        xsim_sc_channel<0, bool > *p_24_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bvalid.bind(*p_24_s_axi_bvalid);
        p_24_s_axi_bvalid->set_sv_netview_offsetfromdp(5838368);
        xsim_sc_channel<0, bool > *p_24_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_bready.bind(*p_24_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->s_axi_araddr.bind(*p_24_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arprot.bind(*p_24_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_24_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arvalid.bind(*p_24_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_24_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_arready.bind(*p_24_s_axi_arready);
        p_24_s_axi_arready->set_sv_netview_offsetfromdp(5838648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_rdata.bind(*p_24_s_axi_rdata);
        p_24_s_axi_rdata->set_sv_netview_offsetfromdp(5838704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_rresp.bind(*p_24_s_axi_rresp);
        p_24_s_axi_rresp->set_sv_netview_offsetfromdp(5838760);
        xsim_sc_channel<0, bool > *p_24_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rvalid.bind(*p_24_s_axi_rvalid);
        p_24_s_axi_rvalid->set_sv_netview_offsetfromdp(5838816);
        xsim_sc_channel<0, bool > *p_24_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_rready.bind(*p_24_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->m_axi_awaddr.bind(*p_24_m_axi_awaddr);
        p_24_m_axi_awaddr->set_sv_netview_offsetfromdp(5838928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_awprot.bind(*p_24_m_axi_awprot);
        p_24_m_axi_awprot->set_sv_netview_offsetfromdp(5838984);
        xsim_sc_channel<0, bool > *p_24_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awvalid.bind(*p_24_m_axi_awvalid);
        p_24_m_axi_awvalid->set_sv_netview_offsetfromdp(5839040);
        xsim_sc_channel<0, bool > *p_24_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_awready.bind(*p_24_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axi_wdata.bind(*p_24_m_axi_wdata);
        p_24_m_axi_wdata->set_sv_netview_offsetfromdp(5839152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_wstrb.bind(*p_24_m_axi_wstrb);
        p_24_m_axi_wstrb->set_sv_netview_offsetfromdp(5839208);
        xsim_sc_channel<0, bool > *p_24_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wvalid.bind(*p_24_m_axi_wvalid);
        p_24_m_axi_wvalid->set_sv_netview_offsetfromdp(5839264);
        xsim_sc_channel<0, bool > *p_24_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_wready.bind(*p_24_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_bresp.bind(*p_24_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bvalid.bind(*p_24_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_bready.bind(*p_24_m_axi_bready);
        p_24_m_axi_bready->set_sv_netview_offsetfromdp(5839488);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->m_axi_araddr.bind(*p_24_m_axi_araddr);
        p_24_m_axi_araddr->set_sv_netview_offsetfromdp(5839544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_arprot.bind(*p_24_m_axi_arprot);
        p_24_m_axi_arprot->set_sv_netview_offsetfromdp(5839600);
        xsim_sc_channel<0, bool > *p_24_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arvalid.bind(*p_24_m_axi_arvalid);
        p_24_m_axi_arvalid->set_sv_netview_offsetfromdp(5839656);
        xsim_sc_channel<0, bool > *p_24_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_arready.bind(*p_24_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axi_rdata.bind(*p_24_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_rresp.bind(*p_24_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rvalid.bind(*p_24_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_rready.bind(*p_24_m_axi_rready);
        p_24_m_axi_rready->set_sv_netview_offsetfromdp(5839936);
        sc_inst_25 = new pfm_dynamic_xbar_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr1.interconnect_axilite_user_1.xbar");
        sc_inst_25->xsim_set_dbg_index(1725);
        xsim_sc_channel<0, bool > *p_25_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->aclk.bind(*p_25_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aclk);
        xsim_sc_channel<0, bool > *p_25_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->aresetn.bind(*p_25_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_awprot.bind(*p_25_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(5850496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(5850720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(5850776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(5850832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_axi_arprot.bind(*p_25_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(5851112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(5851168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(5851224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(5851280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_25_m_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_25->m_axi_awaddr.bind(*p_25_m_axi_awaddr);
        p_25_m_axi_awaddr->set_sv_netview_offsetfromdp(5851392);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_25_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_25->m_axi_awprot.bind(*p_25_m_axi_awprot);
        p_25_m_axi_awprot->set_sv_netview_offsetfromdp(5851448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awvalid.bind(*p_25_m_axi_awvalid);
        p_25_m_axi_awvalid->set_sv_netview_offsetfromdp(5851504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_awready.bind(*p_25_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->m_axi_wdata.bind(*p_25_m_axi_wdata);
        p_25_m_axi_wdata->set_sv_netview_offsetfromdp(5851616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->m_axi_wstrb.bind(*p_25_m_axi_wstrb);
        p_25_m_axi_wstrb->set_sv_netview_offsetfromdp(5851672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_wvalid.bind(*p_25_m_axi_wvalid);
        p_25_m_axi_wvalid->set_sv_netview_offsetfromdp(5851728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_wready.bind(*p_25_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_bresp.bind(*p_25_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bvalid.bind(*p_25_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_bready.bind(*p_25_m_axi_bready);
        p_25_m_axi_bready->set_sv_netview_offsetfromdp(5851952);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_25_m_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_25->m_axi_araddr.bind(*p_25_m_axi_araddr);
        p_25_m_axi_araddr->set_sv_netview_offsetfromdp(5852008);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_25_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_25->m_axi_arprot.bind(*p_25_m_axi_arprot);
        p_25_m_axi_arprot->set_sv_netview_offsetfromdp(5852064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arvalid.bind(*p_25_m_axi_arvalid);
        p_25_m_axi_arvalid->set_sv_netview_offsetfromdp(5852120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_arready.bind(*p_25_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->m_axi_rdata.bind(*p_25_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axi_rresp.bind(*p_25_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rvalid.bind(*p_25_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axi_rready.bind(*p_25_m_axi_rready);
        p_25_m_axi_rready->set_sv_netview_offsetfromdp(5852400);
        sc_inst_26 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_26->xsim_set_dbg_index(75);
        xsim_sc_channel<0, bool > *p_26_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->aclk.bind(*p_26_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aclk);
        xsim_sc_channel<0, bool > *p_26_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->aresetn.bind(*p_26_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_awid.bind(*p_26_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S00_AXI_awaddr.bind(*p_26_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S00_AXI_awlen.bind(*p_26_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_awsize.bind(*p_26_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_awburst.bind(*p_26_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_awlock.bind(*p_26_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_awcache.bind(*p_26_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_awprot.bind(*p_26_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_awqos.bind(*p_26_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_awvalid.bind(*p_26_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_awready.bind(*p_26_S00_AXI_awready);
        p_26_S00_AXI_awready->set_sv_netview_offsetfromdp(7109032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S00_AXI_wdata.bind(*p_26_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_wstrb.bind(*p_26_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wlast.bind(*p_26_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wvalid.bind(*p_26_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_wready.bind(*p_26_S00_AXI_wready);
        p_26_S00_AXI_wready->set_sv_netview_offsetfromdp(7109312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_bid.bind(*p_26_S00_AXI_bid);
        p_26_S00_AXI_bid->set_sv_netview_offsetfromdp(7109368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_bresp.bind(*p_26_S00_AXI_bresp);
        p_26_S00_AXI_bresp->set_sv_netview_offsetfromdp(7109424);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_bvalid.bind(*p_26_S00_AXI_bvalid);
        p_26_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7109480);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_bready.bind(*p_26_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_arid.bind(*p_26_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S00_AXI_araddr.bind(*p_26_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S00_AXI_arlen.bind(*p_26_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_arsize.bind(*p_26_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_arburst.bind(*p_26_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_arlock.bind(*p_26_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_arcache.bind(*p_26_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S00_AXI_arprot.bind(*p_26_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S00_AXI_arqos.bind(*p_26_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_arvalid.bind(*p_26_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_arready.bind(*p_26_S00_AXI_arready);
        p_26_S00_AXI_arready->set_sv_netview_offsetfromdp(7110152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S00_AXI_rid.bind(*p_26_S00_AXI_rid);
        p_26_S00_AXI_rid->set_sv_netview_offsetfromdp(7110208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S00_AXI_rdata.bind(*p_26_S00_AXI_rdata);
        p_26_S00_AXI_rdata->set_sv_netview_offsetfromdp(7110264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S00_AXI_rresp.bind(*p_26_S00_AXI_rresp);
        p_26_S00_AXI_rresp->set_sv_netview_offsetfromdp(7110320);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rlast.bind(*p_26_S00_AXI_rlast);
        p_26_S00_AXI_rlast->set_sv_netview_offsetfromdp(7110376);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rvalid.bind(*p_26_S00_AXI_rvalid);
        p_26_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7110432);
        xsim_sc_channel<0, bool > *p_26_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S00_AXI_rready.bind(*p_26_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S01_AXI_awid.bind(*p_26_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S01_AXI_awaddr.bind(*p_26_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S01_AXI_awlen.bind(*p_26_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S01_AXI_awsize.bind(*p_26_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S01_AXI_awburst.bind(*p_26_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S01_AXI_awlock.bind(*p_26_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S01_AXI_awcache.bind(*p_26_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S01_AXI_awprot.bind(*p_26_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S01_AXI_awqos.bind(*p_26_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awqos);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_awvalid.bind(*p_26_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_awready.bind(*p_26_S01_AXI_awready);
        p_26_S01_AXI_awready->set_sv_netview_offsetfromdp(7111104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S01_AXI_wdata.bind(*p_26_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S01_AXI_wstrb.bind(*p_26_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_wlast.bind(*p_26_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_wlast);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_wvalid.bind(*p_26_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_wready.bind(*p_26_S01_AXI_wready);
        p_26_S01_AXI_wready->set_sv_netview_offsetfromdp(7111384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S01_AXI_bid.bind(*p_26_S01_AXI_bid);
        p_26_S01_AXI_bid->set_sv_netview_offsetfromdp(7111440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S01_AXI_bresp.bind(*p_26_S01_AXI_bresp);
        p_26_S01_AXI_bresp->set_sv_netview_offsetfromdp(7111496);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_bvalid.bind(*p_26_S01_AXI_bvalid);
        p_26_S01_AXI_bvalid->set_sv_netview_offsetfromdp(7111552);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_bready.bind(*p_26_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S01_AXI_arid.bind(*p_26_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S01_AXI_araddr.bind(*p_26_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S01_AXI_arlen.bind(*p_26_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S01_AXI_arsize.bind(*p_26_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S01_AXI_arburst.bind(*p_26_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S01_AXI_arlock.bind(*p_26_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S01_AXI_arcache.bind(*p_26_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S01_AXI_arprot.bind(*p_26_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S01_AXI_arqos.bind(*p_26_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arqos);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_arvalid.bind(*p_26_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_arready.bind(*p_26_S01_AXI_arready);
        p_26_S01_AXI_arready->set_sv_netview_offsetfromdp(7112224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S01_AXI_rid.bind(*p_26_S01_AXI_rid);
        p_26_S01_AXI_rid->set_sv_netview_offsetfromdp(7112280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S01_AXI_rdata.bind(*p_26_S01_AXI_rdata);
        p_26_S01_AXI_rdata->set_sv_netview_offsetfromdp(7112336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S01_AXI_rresp.bind(*p_26_S01_AXI_rresp);
        p_26_S01_AXI_rresp->set_sv_netview_offsetfromdp(7112392);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_rlast.bind(*p_26_S01_AXI_rlast);
        p_26_S01_AXI_rlast->set_sv_netview_offsetfromdp(7112448);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_rvalid.bind(*p_26_S01_AXI_rvalid);
        p_26_S01_AXI_rvalid->set_sv_netview_offsetfromdp(7112504);
        xsim_sc_channel<0, bool > *p_26_S01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S01_AXI_rready.bind(*p_26_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S02_AXI_awid.bind(*p_26_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S02_AXI_awaddr.bind(*p_26_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S02_AXI_awlen.bind(*p_26_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S02_AXI_awsize.bind(*p_26_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S02_AXI_awburst.bind(*p_26_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S02_AXI_awlock.bind(*p_26_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S02_AXI_awcache.bind(*p_26_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S02_AXI_awprot.bind(*p_26_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S02_AXI_awqos.bind(*p_26_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awqos);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_awvalid.bind(*p_26_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_awready.bind(*p_26_S02_AXI_awready);
        p_26_S02_AXI_awready->set_sv_netview_offsetfromdp(7113176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S02_AXI_wdata.bind(*p_26_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S02_AXI_wstrb.bind(*p_26_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_wlast.bind(*p_26_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_wlast);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_wvalid.bind(*p_26_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_wready.bind(*p_26_S02_AXI_wready);
        p_26_S02_AXI_wready->set_sv_netview_offsetfromdp(7113456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S02_AXI_bid.bind(*p_26_S02_AXI_bid);
        p_26_S02_AXI_bid->set_sv_netview_offsetfromdp(7113512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S02_AXI_bresp.bind(*p_26_S02_AXI_bresp);
        p_26_S02_AXI_bresp->set_sv_netview_offsetfromdp(7113568);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_bvalid.bind(*p_26_S02_AXI_bvalid);
        p_26_S02_AXI_bvalid->set_sv_netview_offsetfromdp(7113624);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_bready.bind(*p_26_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S02_AXI_arid.bind(*p_26_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S02_AXI_araddr.bind(*p_26_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S02_AXI_arlen.bind(*p_26_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S02_AXI_arsize.bind(*p_26_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S02_AXI_arburst.bind(*p_26_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S02_AXI_arlock.bind(*p_26_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S02_AXI_arcache.bind(*p_26_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S02_AXI_arprot.bind(*p_26_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S02_AXI_arqos.bind(*p_26_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arqos);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_arvalid.bind(*p_26_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_arready.bind(*p_26_S02_AXI_arready);
        p_26_S02_AXI_arready->set_sv_netview_offsetfromdp(7114296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S02_AXI_rid.bind(*p_26_S02_AXI_rid);
        p_26_S02_AXI_rid->set_sv_netview_offsetfromdp(7114352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S02_AXI_rdata.bind(*p_26_S02_AXI_rdata);
        p_26_S02_AXI_rdata->set_sv_netview_offsetfromdp(7114408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S02_AXI_rresp.bind(*p_26_S02_AXI_rresp);
        p_26_S02_AXI_rresp->set_sv_netview_offsetfromdp(7114464);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_rlast.bind(*p_26_S02_AXI_rlast);
        p_26_S02_AXI_rlast->set_sv_netview_offsetfromdp(7114520);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_rvalid.bind(*p_26_S02_AXI_rvalid);
        p_26_S02_AXI_rvalid->set_sv_netview_offsetfromdp(7114576);
        xsim_sc_channel<0, bool > *p_26_S02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S02_AXI_rready.bind(*p_26_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S03_AXI_awid.bind(*p_26_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S03_AXI_awaddr.bind(*p_26_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S03_AXI_awlen.bind(*p_26_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S03_AXI_awsize.bind(*p_26_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S03_AXI_awburst.bind(*p_26_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S03_AXI_awlock.bind(*p_26_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S03_AXI_awcache.bind(*p_26_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S03_AXI_awprot.bind(*p_26_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S03_AXI_awqos.bind(*p_26_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awqos);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_awvalid.bind(*p_26_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_awready.bind(*p_26_S03_AXI_awready);
        p_26_S03_AXI_awready->set_sv_netview_offsetfromdp(7115248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S03_AXI_wdata.bind(*p_26_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S03_AXI_wstrb.bind(*p_26_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_wlast.bind(*p_26_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_wlast);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_wvalid.bind(*p_26_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_wready.bind(*p_26_S03_AXI_wready);
        p_26_S03_AXI_wready->set_sv_netview_offsetfromdp(7115528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S03_AXI_bid.bind(*p_26_S03_AXI_bid);
        p_26_S03_AXI_bid->set_sv_netview_offsetfromdp(7115584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S03_AXI_bresp.bind(*p_26_S03_AXI_bresp);
        p_26_S03_AXI_bresp->set_sv_netview_offsetfromdp(7115640);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_bvalid.bind(*p_26_S03_AXI_bvalid);
        p_26_S03_AXI_bvalid->set_sv_netview_offsetfromdp(7115696);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_bready.bind(*p_26_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S03_AXI_arid.bind(*p_26_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->S03_AXI_araddr.bind(*p_26_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->S03_AXI_arlen.bind(*p_26_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S03_AXI_arsize.bind(*p_26_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S03_AXI_arburst.bind(*p_26_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S03_AXI_arlock.bind(*p_26_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S03_AXI_arcache.bind(*p_26_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->S03_AXI_arprot.bind(*p_26_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->S03_AXI_arqos.bind(*p_26_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arqos);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_arvalid.bind(*p_26_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_arready.bind(*p_26_S03_AXI_arready);
        p_26_S03_AXI_arready->set_sv_netview_offsetfromdp(7116368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->S03_AXI_rid.bind(*p_26_S03_AXI_rid);
        p_26_S03_AXI_rid->set_sv_netview_offsetfromdp(7116424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->S03_AXI_rdata.bind(*p_26_S03_AXI_rdata);
        p_26_S03_AXI_rdata->set_sv_netview_offsetfromdp(7116480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->S03_AXI_rresp.bind(*p_26_S03_AXI_rresp);
        p_26_S03_AXI_rresp->set_sv_netview_offsetfromdp(7116536);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_rlast.bind(*p_26_S03_AXI_rlast);
        p_26_S03_AXI_rlast->set_sv_netview_offsetfromdp(7116592);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_rvalid.bind(*p_26_S03_AXI_rvalid);
        p_26_S03_AXI_rvalid->set_sv_netview_offsetfromdp(7116648);
        xsim_sc_channel<0, bool > *p_26_S03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->S03_AXI_rready.bind(*p_26_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_S03_AXI_rready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_26_M00_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_26->M00_AXI_awaddr.bind(*p_26_M00_AXI_awaddr);
        p_26_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7116760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M00_AXI_awlen.bind(*p_26_M00_AXI_awlen);
        p_26_M00_AXI_awlen->set_sv_netview_offsetfromdp(7116816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_awsize.bind(*p_26_M00_AXI_awsize);
        p_26_M00_AXI_awsize->set_sv_netview_offsetfromdp(7116872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_awburst.bind(*p_26_M00_AXI_awburst);
        p_26_M00_AXI_awburst->set_sv_netview_offsetfromdp(7116928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M00_AXI_awlock.bind(*p_26_M00_AXI_awlock);
        p_26_M00_AXI_awlock->set_sv_netview_offsetfromdp(7116984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awcache.bind(*p_26_M00_AXI_awcache);
        p_26_M00_AXI_awcache->set_sv_netview_offsetfromdp(7117040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_awprot.bind(*p_26_M00_AXI_awprot);
        p_26_M00_AXI_awprot->set_sv_netview_offsetfromdp(7117096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_awqos.bind(*p_26_M00_AXI_awqos);
        p_26_M00_AXI_awqos->set_sv_netview_offsetfromdp(7117152);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_awvalid.bind(*p_26_M00_AXI_awvalid);
        p_26_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7117208);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_awready.bind(*p_26_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M00_AXI_wdata.bind(*p_26_M00_AXI_wdata);
        p_26_M00_AXI_wdata->set_sv_netview_offsetfromdp(7117320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_wstrb.bind(*p_26_M00_AXI_wstrb);
        p_26_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7117376);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wlast.bind(*p_26_M00_AXI_wlast);
        p_26_M00_AXI_wlast->set_sv_netview_offsetfromdp(7117432);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wvalid.bind(*p_26_M00_AXI_wvalid);
        p_26_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7117488);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_wready.bind(*p_26_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_bresp.bind(*p_26_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_bvalid.bind(*p_26_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_bready.bind(*p_26_M00_AXI_bready);
        p_26_M00_AXI_bready->set_sv_netview_offsetfromdp(7117712);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_26_M00_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_26->M00_AXI_araddr.bind(*p_26_M00_AXI_araddr);
        p_26_M00_AXI_araddr->set_sv_netview_offsetfromdp(7117768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M00_AXI_arlen.bind(*p_26_M00_AXI_arlen);
        p_26_M00_AXI_arlen->set_sv_netview_offsetfromdp(7117824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_arsize.bind(*p_26_M00_AXI_arsize);
        p_26_M00_AXI_arsize->set_sv_netview_offsetfromdp(7117880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_arburst.bind(*p_26_M00_AXI_arburst);
        p_26_M00_AXI_arburst->set_sv_netview_offsetfromdp(7117936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M00_AXI_arlock.bind(*p_26_M00_AXI_arlock);
        p_26_M00_AXI_arlock->set_sv_netview_offsetfromdp(7117992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arcache.bind(*p_26_M00_AXI_arcache);
        p_26_M00_AXI_arcache->set_sv_netview_offsetfromdp(7118048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M00_AXI_arprot.bind(*p_26_M00_AXI_arprot);
        p_26_M00_AXI_arprot->set_sv_netview_offsetfromdp(7118104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M00_AXI_arqos.bind(*p_26_M00_AXI_arqos);
        p_26_M00_AXI_arqos->set_sv_netview_offsetfromdp(7118160);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_arvalid.bind(*p_26_M00_AXI_arvalid);
        p_26_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7118216);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_arready.bind(*p_26_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M00_AXI_rdata.bind(*p_26_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M00_AXI_rresp.bind(*p_26_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rlast.bind(*p_26_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rvalid.bind(*p_26_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_26_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M00_AXI_rready.bind(*p_26_M00_AXI_rready);
        p_26_M00_AXI_rready->set_sv_netview_offsetfromdp(7118552);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_26_M01_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_26->M01_AXI_awaddr.bind(*p_26_M01_AXI_awaddr);
        p_26_M01_AXI_awaddr->set_sv_netview_offsetfromdp(7118608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M01_AXI_awlen.bind(*p_26_M01_AXI_awlen);
        p_26_M01_AXI_awlen->set_sv_netview_offsetfromdp(7118664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M01_AXI_awsize.bind(*p_26_M01_AXI_awsize);
        p_26_M01_AXI_awsize->set_sv_netview_offsetfromdp(7118720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M01_AXI_awburst.bind(*p_26_M01_AXI_awburst);
        p_26_M01_AXI_awburst->set_sv_netview_offsetfromdp(7118776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M01_AXI_awlock.bind(*p_26_M01_AXI_awlock);
        p_26_M01_AXI_awlock->set_sv_netview_offsetfromdp(7118832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M01_AXI_awcache.bind(*p_26_M01_AXI_awcache);
        p_26_M01_AXI_awcache->set_sv_netview_offsetfromdp(7118888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M01_AXI_awprot.bind(*p_26_M01_AXI_awprot);
        p_26_M01_AXI_awprot->set_sv_netview_offsetfromdp(7118944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M01_AXI_awqos.bind(*p_26_M01_AXI_awqos);
        p_26_M01_AXI_awqos->set_sv_netview_offsetfromdp(7119000);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_awvalid.bind(*p_26_M01_AXI_awvalid);
        p_26_M01_AXI_awvalid->set_sv_netview_offsetfromdp(7119056);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_awready.bind(*p_26_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M01_AXI_wdata.bind(*p_26_M01_AXI_wdata);
        p_26_M01_AXI_wdata->set_sv_netview_offsetfromdp(7119168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M01_AXI_wstrb.bind(*p_26_M01_AXI_wstrb);
        p_26_M01_AXI_wstrb->set_sv_netview_offsetfromdp(7119224);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_wlast.bind(*p_26_M01_AXI_wlast);
        p_26_M01_AXI_wlast->set_sv_netview_offsetfromdp(7119280);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_wvalid.bind(*p_26_M01_AXI_wvalid);
        p_26_M01_AXI_wvalid->set_sv_netview_offsetfromdp(7119336);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_wready.bind(*p_26_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M01_AXI_bresp.bind(*p_26_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_bvalid.bind(*p_26_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_bready.bind(*p_26_M01_AXI_bready);
        p_26_M01_AXI_bready->set_sv_netview_offsetfromdp(7119560);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_26_M01_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_26->M01_AXI_araddr.bind(*p_26_M01_AXI_araddr);
        p_26_M01_AXI_araddr->set_sv_netview_offsetfromdp(7119616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M01_AXI_arlen.bind(*p_26_M01_AXI_arlen);
        p_26_M01_AXI_arlen->set_sv_netview_offsetfromdp(7119672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M01_AXI_arsize.bind(*p_26_M01_AXI_arsize);
        p_26_M01_AXI_arsize->set_sv_netview_offsetfromdp(7119728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M01_AXI_arburst.bind(*p_26_M01_AXI_arburst);
        p_26_M01_AXI_arburst->set_sv_netview_offsetfromdp(7119784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M01_AXI_arlock.bind(*p_26_M01_AXI_arlock);
        p_26_M01_AXI_arlock->set_sv_netview_offsetfromdp(7119840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M01_AXI_arcache.bind(*p_26_M01_AXI_arcache);
        p_26_M01_AXI_arcache->set_sv_netview_offsetfromdp(7119896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M01_AXI_arprot.bind(*p_26_M01_AXI_arprot);
        p_26_M01_AXI_arprot->set_sv_netview_offsetfromdp(7119952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M01_AXI_arqos.bind(*p_26_M01_AXI_arqos);
        p_26_M01_AXI_arqos->set_sv_netview_offsetfromdp(7120008);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_arvalid.bind(*p_26_M01_AXI_arvalid);
        p_26_M01_AXI_arvalid->set_sv_netview_offsetfromdp(7120064);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_arready.bind(*p_26_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M01_AXI_rdata.bind(*p_26_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M01_AXI_rresp.bind(*p_26_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_rlast.bind(*p_26_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_rvalid.bind(*p_26_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_26_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M01_AXI_rready.bind(*p_26_M01_AXI_rready);
        p_26_M01_AXI_rready->set_sv_netview_offsetfromdp(7120400);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_26_M02_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_26->M02_AXI_awaddr.bind(*p_26_M02_AXI_awaddr);
        p_26_M02_AXI_awaddr->set_sv_netview_offsetfromdp(7120456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M02_AXI_awlen.bind(*p_26_M02_AXI_awlen);
        p_26_M02_AXI_awlen->set_sv_netview_offsetfromdp(7120512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M02_AXI_awsize.bind(*p_26_M02_AXI_awsize);
        p_26_M02_AXI_awsize->set_sv_netview_offsetfromdp(7120568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M02_AXI_awburst.bind(*p_26_M02_AXI_awburst);
        p_26_M02_AXI_awburst->set_sv_netview_offsetfromdp(7120624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M02_AXI_awlock.bind(*p_26_M02_AXI_awlock);
        p_26_M02_AXI_awlock->set_sv_netview_offsetfromdp(7120680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M02_AXI_awcache.bind(*p_26_M02_AXI_awcache);
        p_26_M02_AXI_awcache->set_sv_netview_offsetfromdp(7120736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M02_AXI_awprot.bind(*p_26_M02_AXI_awprot);
        p_26_M02_AXI_awprot->set_sv_netview_offsetfromdp(7120792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M02_AXI_awqos.bind(*p_26_M02_AXI_awqos);
        p_26_M02_AXI_awqos->set_sv_netview_offsetfromdp(7120848);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_awvalid.bind(*p_26_M02_AXI_awvalid);
        p_26_M02_AXI_awvalid->set_sv_netview_offsetfromdp(7120904);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_awready.bind(*p_26_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M02_AXI_wdata.bind(*p_26_M02_AXI_wdata);
        p_26_M02_AXI_wdata->set_sv_netview_offsetfromdp(7121016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M02_AXI_wstrb.bind(*p_26_M02_AXI_wstrb);
        p_26_M02_AXI_wstrb->set_sv_netview_offsetfromdp(7121072);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_wlast.bind(*p_26_M02_AXI_wlast);
        p_26_M02_AXI_wlast->set_sv_netview_offsetfromdp(7121128);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_wvalid.bind(*p_26_M02_AXI_wvalid);
        p_26_M02_AXI_wvalid->set_sv_netview_offsetfromdp(7121184);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_wready.bind(*p_26_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M02_AXI_bresp.bind(*p_26_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_bvalid.bind(*p_26_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_bready.bind(*p_26_M02_AXI_bready);
        p_26_M02_AXI_bready->set_sv_netview_offsetfromdp(7121408);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_26_M02_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_26->M02_AXI_araddr.bind(*p_26_M02_AXI_araddr);
        p_26_M02_AXI_araddr->set_sv_netview_offsetfromdp(7121464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M02_AXI_arlen.bind(*p_26_M02_AXI_arlen);
        p_26_M02_AXI_arlen->set_sv_netview_offsetfromdp(7121520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M02_AXI_arsize.bind(*p_26_M02_AXI_arsize);
        p_26_M02_AXI_arsize->set_sv_netview_offsetfromdp(7121576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M02_AXI_arburst.bind(*p_26_M02_AXI_arburst);
        p_26_M02_AXI_arburst->set_sv_netview_offsetfromdp(7121632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M02_AXI_arlock.bind(*p_26_M02_AXI_arlock);
        p_26_M02_AXI_arlock->set_sv_netview_offsetfromdp(7121688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M02_AXI_arcache.bind(*p_26_M02_AXI_arcache);
        p_26_M02_AXI_arcache->set_sv_netview_offsetfromdp(7121744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M02_AXI_arprot.bind(*p_26_M02_AXI_arprot);
        p_26_M02_AXI_arprot->set_sv_netview_offsetfromdp(7121800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M02_AXI_arqos.bind(*p_26_M02_AXI_arqos);
        p_26_M02_AXI_arqos->set_sv_netview_offsetfromdp(7121856);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_arvalid.bind(*p_26_M02_AXI_arvalid);
        p_26_M02_AXI_arvalid->set_sv_netview_offsetfromdp(7121912);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_arready.bind(*p_26_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M02_AXI_rdata.bind(*p_26_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M02_AXI_rresp.bind(*p_26_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_rlast.bind(*p_26_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_rvalid.bind(*p_26_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_26_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M02_AXI_rready.bind(*p_26_M02_AXI_rready);
        p_26_M02_AXI_rready->set_sv_netview_offsetfromdp(7122248);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_26_M03_AXI_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_26->M03_AXI_awaddr.bind(*p_26_M03_AXI_awaddr);
        p_26_M03_AXI_awaddr->set_sv_netview_offsetfromdp(7122304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M03_AXI_awlen.bind(*p_26_M03_AXI_awlen);
        p_26_M03_AXI_awlen->set_sv_netview_offsetfromdp(7122360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M03_AXI_awsize.bind(*p_26_M03_AXI_awsize);
        p_26_M03_AXI_awsize->set_sv_netview_offsetfromdp(7122416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M03_AXI_awburst.bind(*p_26_M03_AXI_awburst);
        p_26_M03_AXI_awburst->set_sv_netview_offsetfromdp(7122472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M03_AXI_awlock.bind(*p_26_M03_AXI_awlock);
        p_26_M03_AXI_awlock->set_sv_netview_offsetfromdp(7122528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M03_AXI_awcache.bind(*p_26_M03_AXI_awcache);
        p_26_M03_AXI_awcache->set_sv_netview_offsetfromdp(7122584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M03_AXI_awprot.bind(*p_26_M03_AXI_awprot);
        p_26_M03_AXI_awprot->set_sv_netview_offsetfromdp(7122640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M03_AXI_awqos.bind(*p_26_M03_AXI_awqos);
        p_26_M03_AXI_awqos->set_sv_netview_offsetfromdp(7122696);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_awvalid.bind(*p_26_M03_AXI_awvalid);
        p_26_M03_AXI_awvalid->set_sv_netview_offsetfromdp(7122752);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_awready.bind(*p_26_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M03_AXI_wdata.bind(*p_26_M03_AXI_wdata);
        p_26_M03_AXI_wdata->set_sv_netview_offsetfromdp(7122864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M03_AXI_wstrb.bind(*p_26_M03_AXI_wstrb);
        p_26_M03_AXI_wstrb->set_sv_netview_offsetfromdp(7122920);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_wlast.bind(*p_26_M03_AXI_wlast);
        p_26_M03_AXI_wlast->set_sv_netview_offsetfromdp(7122976);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_wvalid.bind(*p_26_M03_AXI_wvalid);
        p_26_M03_AXI_wvalid->set_sv_netview_offsetfromdp(7123032);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_wready.bind(*p_26_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M03_AXI_bresp.bind(*p_26_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_bvalid.bind(*p_26_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_bready.bind(*p_26_M03_AXI_bready);
        p_26_M03_AXI_bready->set_sv_netview_offsetfromdp(7123256);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_26_M03_AXI_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_26->M03_AXI_araddr.bind(*p_26_M03_AXI_araddr);
        p_26_M03_AXI_araddr->set_sv_netview_offsetfromdp(7123312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M03_AXI_arlen.bind(*p_26_M03_AXI_arlen);
        p_26_M03_AXI_arlen->set_sv_netview_offsetfromdp(7123368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M03_AXI_arsize.bind(*p_26_M03_AXI_arsize);
        p_26_M03_AXI_arsize->set_sv_netview_offsetfromdp(7123424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M03_AXI_arburst.bind(*p_26_M03_AXI_arburst);
        p_26_M03_AXI_arburst->set_sv_netview_offsetfromdp(7123480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M03_AXI_arlock.bind(*p_26_M03_AXI_arlock);
        p_26_M03_AXI_arlock->set_sv_netview_offsetfromdp(7123536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M03_AXI_arcache.bind(*p_26_M03_AXI_arcache);
        p_26_M03_AXI_arcache->set_sv_netview_offsetfromdp(7123592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M03_AXI_arprot.bind(*p_26_M03_AXI_arprot);
        p_26_M03_AXI_arprot->set_sv_netview_offsetfromdp(7123648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M03_AXI_arqos.bind(*p_26_M03_AXI_arqos);
        p_26_M03_AXI_arqos->set_sv_netview_offsetfromdp(7123704);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_arvalid.bind(*p_26_M03_AXI_arvalid);
        p_26_M03_AXI_arvalid->set_sv_netview_offsetfromdp(7123760);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_arready.bind(*p_26_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M03_AXI_rdata.bind(*p_26_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M03_AXI_rresp.bind(*p_26_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_rlast.bind(*p_26_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_rvalid.bind(*p_26_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_26_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M03_AXI_rready.bind(*p_26_M03_AXI_rready);
        p_26_M03_AXI_rready->set_sv_netview_offsetfromdp(7124096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M04_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M04_AXI_awaddr.bind(*p_26_M04_AXI_awaddr);
        p_26_M04_AXI_awaddr->set_sv_netview_offsetfromdp(7124152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M04_AXI_awlen.bind(*p_26_M04_AXI_awlen);
        p_26_M04_AXI_awlen->set_sv_netview_offsetfromdp(7124208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M04_AXI_awsize.bind(*p_26_M04_AXI_awsize);
        p_26_M04_AXI_awsize->set_sv_netview_offsetfromdp(7124264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M04_AXI_awburst.bind(*p_26_M04_AXI_awburst);
        p_26_M04_AXI_awburst->set_sv_netview_offsetfromdp(7124320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M04_AXI_awlock.bind(*p_26_M04_AXI_awlock);
        p_26_M04_AXI_awlock->set_sv_netview_offsetfromdp(7124376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M04_AXI_awcache.bind(*p_26_M04_AXI_awcache);
        p_26_M04_AXI_awcache->set_sv_netview_offsetfromdp(7124432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M04_AXI_awprot.bind(*p_26_M04_AXI_awprot);
        p_26_M04_AXI_awprot->set_sv_netview_offsetfromdp(7124488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M04_AXI_awqos.bind(*p_26_M04_AXI_awqos);
        p_26_M04_AXI_awqos->set_sv_netview_offsetfromdp(7124544);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_awvalid.bind(*p_26_M04_AXI_awvalid);
        p_26_M04_AXI_awvalid->set_sv_netview_offsetfromdp(7124600);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_awready.bind(*p_26_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_M04_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->M04_AXI_wdata.bind(*p_26_M04_AXI_wdata);
        p_26_M04_AXI_wdata->set_sv_netview_offsetfromdp(7124712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M04_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M04_AXI_wstrb.bind(*p_26_M04_AXI_wstrb);
        p_26_M04_AXI_wstrb->set_sv_netview_offsetfromdp(7124768);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_wlast.bind(*p_26_M04_AXI_wlast);
        p_26_M04_AXI_wlast->set_sv_netview_offsetfromdp(7124824);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_wvalid.bind(*p_26_M04_AXI_wvalid);
        p_26_M04_AXI_wvalid->set_sv_netview_offsetfromdp(7124880);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_wready.bind(*p_26_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M04_AXI_bresp.bind(*p_26_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_bresp);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_bvalid.bind(*p_26_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_bready.bind(*p_26_M04_AXI_bready);
        p_26_M04_AXI_bready->set_sv_netview_offsetfromdp(7125104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_M04_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->M04_AXI_araddr.bind(*p_26_M04_AXI_araddr);
        p_26_M04_AXI_araddr->set_sv_netview_offsetfromdp(7125160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->M04_AXI_arlen.bind(*p_26_M04_AXI_arlen);
        p_26_M04_AXI_arlen->set_sv_netview_offsetfromdp(7125216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M04_AXI_arsize.bind(*p_26_M04_AXI_arsize);
        p_26_M04_AXI_arsize->set_sv_netview_offsetfromdp(7125272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M04_AXI_arburst.bind(*p_26_M04_AXI_arburst);
        p_26_M04_AXI_arburst->set_sv_netview_offsetfromdp(7125328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->M04_AXI_arlock.bind(*p_26_M04_AXI_arlock);
        p_26_M04_AXI_arlock->set_sv_netview_offsetfromdp(7125384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M04_AXI_arcache.bind(*p_26_M04_AXI_arcache);
        p_26_M04_AXI_arcache->set_sv_netview_offsetfromdp(7125440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->M04_AXI_arprot.bind(*p_26_M04_AXI_arprot);
        p_26_M04_AXI_arprot->set_sv_netview_offsetfromdp(7125496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->M04_AXI_arqos.bind(*p_26_M04_AXI_arqos);
        p_26_M04_AXI_arqos->set_sv_netview_offsetfromdp(7125552);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_arvalid.bind(*p_26_M04_AXI_arvalid);
        p_26_M04_AXI_arvalid->set_sv_netview_offsetfromdp(7125608);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_arready.bind(*p_26_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_M04_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->M04_AXI_rdata.bind(*p_26_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->M04_AXI_rresp.bind(*p_26_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_rlast.bind(*p_26_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_rlast);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_rvalid.bind(*p_26_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_26_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->M04_AXI_rready.bind(*p_26_M04_AXI_rready);
        p_26_M04_AXI_rready->set_sv_netview_offsetfromdp(7125944);
        sc_inst_27 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_27->xsim_set_dbg_index(24);
        sc_inst_28 = new pfm_top_axi_clock_converter_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_clock_converter_0");
        sc_inst_28->xsim_set_dbg_index(437);
        xsim_sc_channel<0, bool > *p_28_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_aclk.bind(*p_28_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_28_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_aresetn.bind(*p_28_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_28_s_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_28->s_axi_awaddr.bind(*p_28_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_awlen.bind(*p_28_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_awsize.bind(*p_28_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_awburst.bind(*p_28_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->s_axi_awlock.bind(*p_28_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awcache.bind(*p_28_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_awprot.bind(*p_28_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awregion.bind(*p_28_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_awqos.bind(*p_28_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_28_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awvalid.bind(*p_28_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awready.bind(*p_28_s_axi_awready);
        p_28_s_axi_awready->set_sv_netview_offsetfromdp(7520984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->s_axi_wdata.bind(*p_28_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->s_axi_wstrb.bind(*p_28_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_28_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wlast.bind(*p_28_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_28_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wvalid.bind(*p_28_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wready.bind(*p_28_s_axi_wready);
        p_28_s_axi_wready->set_sv_netview_offsetfromdp(7521264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_bresp.bind(*p_28_s_axi_bresp);
        p_28_s_axi_bresp->set_sv_netview_offsetfromdp(7521320);
        xsim_sc_channel<0, bool > *p_28_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bvalid.bind(*p_28_s_axi_bvalid);
        p_28_s_axi_bvalid->set_sv_netview_offsetfromdp(7521376);
        xsim_sc_channel<0, bool > *p_28_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bready.bind(*p_28_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bready);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_28_s_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_28->s_axi_araddr.bind(*p_28_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_arlen.bind(*p_28_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_arsize.bind(*p_28_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_arburst.bind(*p_28_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->s_axi_arlock.bind(*p_28_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arcache.bind(*p_28_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_arprot.bind(*p_28_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arregion.bind(*p_28_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_arqos.bind(*p_28_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_28_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arvalid.bind(*p_28_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arready.bind(*p_28_s_axi_arready);
        p_28_s_axi_arready->set_sv_netview_offsetfromdp(7522048);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->s_axi_rdata.bind(*p_28_s_axi_rdata);
        p_28_s_axi_rdata->set_sv_netview_offsetfromdp(7522104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_rresp.bind(*p_28_s_axi_rresp);
        p_28_s_axi_rresp->set_sv_netview_offsetfromdp(7522160);
        xsim_sc_channel<0, bool > *p_28_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rlast.bind(*p_28_s_axi_rlast);
        p_28_s_axi_rlast->set_sv_netview_offsetfromdp(7522216);
        xsim_sc_channel<0, bool > *p_28_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rvalid.bind(*p_28_s_axi_rvalid);
        p_28_s_axi_rvalid->set_sv_netview_offsetfromdp(7522272);
        xsim_sc_channel<0, bool > *p_28_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rready.bind(*p_28_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rready);
        xsim_sc_channel<0, bool > *p_28_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_aclk.bind(*p_28_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_28_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_aresetn.bind(*p_28_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_aresetn);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_28_m_axi_awaddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_28->m_axi_awaddr.bind(*p_28_m_axi_awaddr);
        p_28_m_axi_awaddr->set_sv_netview_offsetfromdp(7522496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axi_awlen.bind(*p_28_m_axi_awlen);
        p_28_m_axi_awlen->set_sv_netview_offsetfromdp(7522552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_awsize.bind(*p_28_m_axi_awsize);
        p_28_m_axi_awsize->set_sv_netview_offsetfromdp(7522608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_awburst.bind(*p_28_m_axi_awburst);
        p_28_m_axi_awburst->set_sv_netview_offsetfromdp(7522664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->m_axi_awlock.bind(*p_28_m_axi_awlock);
        p_28_m_axi_awlock->set_sv_netview_offsetfromdp(7522720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awcache.bind(*p_28_m_axi_awcache);
        p_28_m_axi_awcache->set_sv_netview_offsetfromdp(7522776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_awprot.bind(*p_28_m_axi_awprot);
        p_28_m_axi_awprot->set_sv_netview_offsetfromdp(7522832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awregion.bind(*p_28_m_axi_awregion);
        p_28_m_axi_awregion->set_sv_netview_offsetfromdp(7522888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_awqos.bind(*p_28_m_axi_awqos);
        p_28_m_axi_awqos->set_sv_netview_offsetfromdp(7522944);
        xsim_sc_channel<0, bool > *p_28_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awvalid.bind(*p_28_m_axi_awvalid);
        p_28_m_axi_awvalid->set_sv_netview_offsetfromdp(7523000);
        xsim_sc_channel<0, bool > *p_28_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_awready.bind(*p_28_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_m_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->m_axi_wdata.bind(*p_28_m_axi_wdata);
        p_28_m_axi_wdata->set_sv_netview_offsetfromdp(7523112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_m_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->m_axi_wstrb.bind(*p_28_m_axi_wstrb);
        p_28_m_axi_wstrb->set_sv_netview_offsetfromdp(7523168);
        xsim_sc_channel<0, bool > *p_28_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wlast.bind(*p_28_m_axi_wlast);
        p_28_m_axi_wlast->set_sv_netview_offsetfromdp(7523224);
        xsim_sc_channel<0, bool > *p_28_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wvalid.bind(*p_28_m_axi_wvalid);
        p_28_m_axi_wvalid->set_sv_netview_offsetfromdp(7523280);
        xsim_sc_channel<0, bool > *p_28_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_wready.bind(*p_28_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_bresp.bind(*p_28_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_28_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bvalid.bind(*p_28_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_bready.bind(*p_28_m_axi_bready);
        p_28_m_axi_bready->set_sv_netview_offsetfromdp(7523504);
        xsim_sc_channel<39, sc_dt::sc_bv<39> > *p_28_m_axi_araddr = new xsim_sc_channel<39, sc_dt::sc_bv<39> >();
        sc_inst_28->m_axi_araddr.bind(*p_28_m_axi_araddr);
        p_28_m_axi_araddr->set_sv_netview_offsetfromdp(7523560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axi_arlen.bind(*p_28_m_axi_arlen);
        p_28_m_axi_arlen->set_sv_netview_offsetfromdp(7523616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_arsize.bind(*p_28_m_axi_arsize);
        p_28_m_axi_arsize->set_sv_netview_offsetfromdp(7523672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_arburst.bind(*p_28_m_axi_arburst);
        p_28_m_axi_arburst->set_sv_netview_offsetfromdp(7523728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->m_axi_arlock.bind(*p_28_m_axi_arlock);
        p_28_m_axi_arlock->set_sv_netview_offsetfromdp(7523784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arcache.bind(*p_28_m_axi_arcache);
        p_28_m_axi_arcache->set_sv_netview_offsetfromdp(7523840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->m_axi_arprot.bind(*p_28_m_axi_arprot);
        p_28_m_axi_arprot->set_sv_netview_offsetfromdp(7523896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arregion.bind(*p_28_m_axi_arregion);
        p_28_m_axi_arregion->set_sv_netview_offsetfromdp(7523952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->m_axi_arqos.bind(*p_28_m_axi_arqos);
        p_28_m_axi_arqos->set_sv_netview_offsetfromdp(7524008);
        xsim_sc_channel<0, bool > *p_28_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arvalid.bind(*p_28_m_axi_arvalid);
        p_28_m_axi_arvalid->set_sv_netview_offsetfromdp(7524064);
        xsim_sc_channel<0, bool > *p_28_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_arready.bind(*p_28_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_28_m_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_28->m_axi_rdata.bind(*p_28_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->m_axi_rresp.bind(*p_28_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_28_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rlast.bind(*p_28_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_28_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rvalid.bind(*p_28_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_28_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axi_rready.bind(*p_28_m_axi_rready);
        p_28_m_axi_rready->set_sv_netview_offsetfromdp(7524400);
        sc_inst_29 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_29->xsim_set_dbg_index(438);
        xsim_sc_channel<0, bool > *p_29_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_29->aclk.bind(*p_29_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aclk);
        xsim_sc_channel<0, bool > *p_29_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->aresetn.bind(*p_29_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->s_axi_awlen.bind(*p_29_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_awburst.bind(*p_29_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->s_axi_awlock.bind(*p_29_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awcache.bind(*p_29_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_awqos.bind(*p_29_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_awuser.bind(*p_29_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(7525120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wlast.bind(*p_29_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(7525400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(7525456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_buser.bind(*p_29_s_axi_buser);
        p_29_s_axi_buser->set_sv_netview_offsetfromdp(7525512);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(7525568);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->s_axi_arlen.bind(*p_29_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_arburst.bind(*p_29_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->s_axi_arlock.bind(*p_29_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arcache.bind(*p_29_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_arqos.bind(*p_29_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_aruser.bind(*p_29_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(7526184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(7526240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(7526296);
        xsim_sc_channel<0, bool > *p_29_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rlast.bind(*p_29_s_axi_rlast);
        p_29_s_axi_rlast->set_sv_netview_offsetfromdp(7526352);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(7526408);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_awaddr.bind(*p_29_m_axi_awaddr);
        p_29_m_axi_awaddr->set_sv_netview_offsetfromdp(7526520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->m_axi_awlen.bind(*p_29_m_axi_awlen);
        p_29_m_axi_awlen->set_sv_netview_offsetfromdp(7526576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_awburst.bind(*p_29_m_axi_awburst);
        p_29_m_axi_awburst->set_sv_netview_offsetfromdp(7526632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->m_axi_awlock.bind(*p_29_m_axi_awlock);
        p_29_m_axi_awlock->set_sv_netview_offsetfromdp(7526688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awcache.bind(*p_29_m_axi_awcache);
        p_29_m_axi_awcache->set_sv_netview_offsetfromdp(7526744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_awprot.bind(*p_29_m_axi_awprot);
        p_29_m_axi_awprot->set_sv_netview_offsetfromdp(7526800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_awqos.bind(*p_29_m_axi_awqos);
        p_29_m_axi_awqos->set_sv_netview_offsetfromdp(7526856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_awuser.bind(*p_29_m_axi_awuser);
        p_29_m_axi_awuser->set_sv_netview_offsetfromdp(7526912);
        xsim_sc_channel<0, bool > *p_29_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awvalid.bind(*p_29_m_axi_awvalid);
        p_29_m_axi_awvalid->set_sv_netview_offsetfromdp(7526968);
        xsim_sc_channel<0, bool > *p_29_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_awready.bind(*p_29_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_wdata.bind(*p_29_m_axi_wdata);
        p_29_m_axi_wdata->set_sv_netview_offsetfromdp(7527080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_wstrb.bind(*p_29_m_axi_wstrb);
        p_29_m_axi_wstrb->set_sv_netview_offsetfromdp(7527136);
        xsim_sc_channel<0, bool > *p_29_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wlast.bind(*p_29_m_axi_wlast);
        p_29_m_axi_wlast->set_sv_netview_offsetfromdp(7527192);
        xsim_sc_channel<0, bool > *p_29_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wvalid.bind(*p_29_m_axi_wvalid);
        p_29_m_axi_wvalid->set_sv_netview_offsetfromdp(7527248);
        xsim_sc_channel<0, bool > *p_29_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_wready.bind(*p_29_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_bresp.bind(*p_29_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_buser.bind(*p_29_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_buser);
        xsim_sc_channel<0, bool > *p_29_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bvalid.bind(*p_29_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_bready.bind(*p_29_m_axi_bready);
        p_29_m_axi_bready->set_sv_netview_offsetfromdp(7527528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_araddr.bind(*p_29_m_axi_araddr);
        p_29_m_axi_araddr->set_sv_netview_offsetfromdp(7527584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->m_axi_arlen.bind(*p_29_m_axi_arlen);
        p_29_m_axi_arlen->set_sv_netview_offsetfromdp(7527640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_arburst.bind(*p_29_m_axi_arburst);
        p_29_m_axi_arburst->set_sv_netview_offsetfromdp(7527696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->m_axi_arlock.bind(*p_29_m_axi_arlock);
        p_29_m_axi_arlock->set_sv_netview_offsetfromdp(7527752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arcache.bind(*p_29_m_axi_arcache);
        p_29_m_axi_arcache->set_sv_netview_offsetfromdp(7527808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->m_axi_arprot.bind(*p_29_m_axi_arprot);
        p_29_m_axi_arprot->set_sv_netview_offsetfromdp(7527864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->m_axi_arqos.bind(*p_29_m_axi_arqos);
        p_29_m_axi_arqos->set_sv_netview_offsetfromdp(7527920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_aruser.bind(*p_29_m_axi_aruser);
        p_29_m_axi_aruser->set_sv_netview_offsetfromdp(7527976);
        xsim_sc_channel<0, bool > *p_29_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arvalid.bind(*p_29_m_axi_arvalid);
        p_29_m_axi_arvalid->set_sv_netview_offsetfromdp(7528032);
        xsim_sc_channel<0, bool > *p_29_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_arready.bind(*p_29_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->m_axi_rdata.bind(*p_29_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->m_axi_rresp.bind(*p_29_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_29_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rlast.bind(*p_29_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_29_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rvalid.bind(*p_29_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_29_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axi_rready.bind(*p_29_m_axi_rready);
        p_29_m_axi_rready->set_sv_netview_offsetfromdp(7528368);
        sc_inst_30 = new pfm_top_axi_vip_1_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_1");
        sc_inst_30->xsim_set_dbg_index(439);
        xsim_sc_channel<0, bool > *p_30_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_30->aclk.bind(*p_30_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aclk);
        xsim_sc_channel<0, bool > *p_30_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->aresetn.bind(*p_30_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->s_axi_awlen.bind(*p_30_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_awburst.bind(*p_30_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->s_axi_awlock.bind(*p_30_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awcache.bind(*p_30_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awprot.bind(*p_30_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_awqos.bind(*p_30_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_awuser.bind(*p_30_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(7529088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_30_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wlast.bind(*p_30_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(7529368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(7529424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_buser.bind(*p_30_s_axi_buser);
        p_30_s_axi_buser->set_sv_netview_offsetfromdp(7529480);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(7529536);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->s_axi_arlen.bind(*p_30_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_arburst.bind(*p_30_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->s_axi_arlock.bind(*p_30_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arcache.bind(*p_30_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arprot.bind(*p_30_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_arqos.bind(*p_30_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_aruser.bind(*p_30_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(7530152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(7530208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(7530264);
        xsim_sc_channel<0, bool > *p_30_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rlast.bind(*p_30_s_axi_rlast);
        p_30_s_axi_rlast->set_sv_netview_offsetfromdp(7530320);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(7530376);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->m_axi_awaddr.bind(*p_30_m_axi_awaddr);
        p_30_m_axi_awaddr->set_sv_netview_offsetfromdp(7530488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->m_axi_awlen.bind(*p_30_m_axi_awlen);
        p_30_m_axi_awlen->set_sv_netview_offsetfromdp(7530544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_awburst.bind(*p_30_m_axi_awburst);
        p_30_m_axi_awburst->set_sv_netview_offsetfromdp(7530600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->m_axi_awlock.bind(*p_30_m_axi_awlock);
        p_30_m_axi_awlock->set_sv_netview_offsetfromdp(7530656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awcache.bind(*p_30_m_axi_awcache);
        p_30_m_axi_awcache->set_sv_netview_offsetfromdp(7530712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_awprot.bind(*p_30_m_axi_awprot);
        p_30_m_axi_awprot->set_sv_netview_offsetfromdp(7530768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_awqos.bind(*p_30_m_axi_awqos);
        p_30_m_axi_awqos->set_sv_netview_offsetfromdp(7530824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_awuser.bind(*p_30_m_axi_awuser);
        p_30_m_axi_awuser->set_sv_netview_offsetfromdp(7530880);
        xsim_sc_channel<0, bool > *p_30_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awvalid.bind(*p_30_m_axi_awvalid);
        p_30_m_axi_awvalid->set_sv_netview_offsetfromdp(7530936);
        xsim_sc_channel<0, bool > *p_30_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_awready.bind(*p_30_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_wdata.bind(*p_30_m_axi_wdata);
        p_30_m_axi_wdata->set_sv_netview_offsetfromdp(7531048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_wstrb.bind(*p_30_m_axi_wstrb);
        p_30_m_axi_wstrb->set_sv_netview_offsetfromdp(7531104);
        xsim_sc_channel<0, bool > *p_30_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wlast.bind(*p_30_m_axi_wlast);
        p_30_m_axi_wlast->set_sv_netview_offsetfromdp(7531160);
        xsim_sc_channel<0, bool > *p_30_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wvalid.bind(*p_30_m_axi_wvalid);
        p_30_m_axi_wvalid->set_sv_netview_offsetfromdp(7531216);
        xsim_sc_channel<0, bool > *p_30_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_wready.bind(*p_30_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_bresp.bind(*p_30_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_buser.bind(*p_30_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_buser);
        xsim_sc_channel<0, bool > *p_30_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bvalid.bind(*p_30_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_bready.bind(*p_30_m_axi_bready);
        p_30_m_axi_bready->set_sv_netview_offsetfromdp(7531496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->m_axi_araddr.bind(*p_30_m_axi_araddr);
        p_30_m_axi_araddr->set_sv_netview_offsetfromdp(7531552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->m_axi_arlen.bind(*p_30_m_axi_arlen);
        p_30_m_axi_arlen->set_sv_netview_offsetfromdp(7531608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_arburst.bind(*p_30_m_axi_arburst);
        p_30_m_axi_arburst->set_sv_netview_offsetfromdp(7531664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->m_axi_arlock.bind(*p_30_m_axi_arlock);
        p_30_m_axi_arlock->set_sv_netview_offsetfromdp(7531720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arcache.bind(*p_30_m_axi_arcache);
        p_30_m_axi_arcache->set_sv_netview_offsetfromdp(7531776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->m_axi_arprot.bind(*p_30_m_axi_arprot);
        p_30_m_axi_arprot->set_sv_netview_offsetfromdp(7531832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->m_axi_arqos.bind(*p_30_m_axi_arqos);
        p_30_m_axi_arqos->set_sv_netview_offsetfromdp(7531888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_aruser.bind(*p_30_m_axi_aruser);
        p_30_m_axi_aruser->set_sv_netview_offsetfromdp(7531944);
        xsim_sc_channel<0, bool > *p_30_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arvalid.bind(*p_30_m_axi_arvalid);
        p_30_m_axi_arvalid->set_sv_netview_offsetfromdp(7532000);
        xsim_sc_channel<0, bool > *p_30_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_arready.bind(*p_30_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->m_axi_rdata.bind(*p_30_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->m_axi_rresp.bind(*p_30_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_30_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rlast.bind(*p_30_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_30_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rvalid.bind(*p_30_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_30_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axi_rready.bind(*p_30_m_axi_rready);
        p_30_m_axi_rready->set_sv_netview_offsetfromdp(7532336);
        sc_inst_31 = new pfm_top_axi_vip_2_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_2");
        sc_inst_31->xsim_set_dbg_index(440);
        xsim_sc_channel<0, bool > *p_31_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_31->aclk.bind(*p_31_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aclk);
        xsim_sc_channel<0, bool > *p_31_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->aresetn.bind(*p_31_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_awaddr.bind(*p_31_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_awlen.bind(*p_31_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_awburst.bind(*p_31_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->s_axi_awlock.bind(*p_31_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awcache.bind(*p_31_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_awprot.bind(*p_31_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_awqos.bind(*p_31_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_awuser.bind(*p_31_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_31_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awvalid.bind(*p_31_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awready.bind(*p_31_s_axi_awready);
        p_31_s_axi_awready->set_sv_netview_offsetfromdp(7533056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_wdata.bind(*p_31_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_wstrb.bind(*p_31_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wlast.bind(*p_31_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_31_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wvalid.bind(*p_31_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wready.bind(*p_31_s_axi_wready);
        p_31_s_axi_wready->set_sv_netview_offsetfromdp(7533336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_bresp.bind(*p_31_s_axi_bresp);
        p_31_s_axi_bresp->set_sv_netview_offsetfromdp(7533392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_buser.bind(*p_31_s_axi_buser);
        p_31_s_axi_buser->set_sv_netview_offsetfromdp(7533448);
        xsim_sc_channel<0, bool > *p_31_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bvalid.bind(*p_31_s_axi_bvalid);
        p_31_s_axi_bvalid->set_sv_netview_offsetfromdp(7533504);
        xsim_sc_channel<0, bool > *p_31_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bready.bind(*p_31_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->s_axi_araddr.bind(*p_31_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_arlen.bind(*p_31_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_arburst.bind(*p_31_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->s_axi_arlock.bind(*p_31_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arcache.bind(*p_31_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_arprot.bind(*p_31_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_arqos.bind(*p_31_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_aruser.bind(*p_31_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_31_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arvalid.bind(*p_31_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arready.bind(*p_31_s_axi_arready);
        p_31_s_axi_arready->set_sv_netview_offsetfromdp(7534120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_rdata.bind(*p_31_s_axi_rdata);
        p_31_s_axi_rdata->set_sv_netview_offsetfromdp(7534176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_rresp.bind(*p_31_s_axi_rresp);
        p_31_s_axi_rresp->set_sv_netview_offsetfromdp(7534232);
        xsim_sc_channel<0, bool > *p_31_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rlast.bind(*p_31_s_axi_rlast);
        p_31_s_axi_rlast->set_sv_netview_offsetfromdp(7534288);
        xsim_sc_channel<0, bool > *p_31_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rvalid.bind(*p_31_s_axi_rvalid);
        p_31_s_axi_rvalid->set_sv_netview_offsetfromdp(7534344);
        xsim_sc_channel<0, bool > *p_31_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rready.bind(*p_31_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->m_axi_awaddr.bind(*p_31_m_axi_awaddr);
        p_31_m_axi_awaddr->set_sv_netview_offsetfromdp(7534456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axi_awlen.bind(*p_31_m_axi_awlen);
        p_31_m_axi_awlen->set_sv_netview_offsetfromdp(7534512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_awburst.bind(*p_31_m_axi_awburst);
        p_31_m_axi_awburst->set_sv_netview_offsetfromdp(7534568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_awlock.bind(*p_31_m_axi_awlock);
        p_31_m_axi_awlock->set_sv_netview_offsetfromdp(7534624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awcache.bind(*p_31_m_axi_awcache);
        p_31_m_axi_awcache->set_sv_netview_offsetfromdp(7534680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_awprot.bind(*p_31_m_axi_awprot);
        p_31_m_axi_awprot->set_sv_netview_offsetfromdp(7534736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_awqos.bind(*p_31_m_axi_awqos);
        p_31_m_axi_awqos->set_sv_netview_offsetfromdp(7534792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_awuser.bind(*p_31_m_axi_awuser);
        p_31_m_axi_awuser->set_sv_netview_offsetfromdp(7534848);
        xsim_sc_channel<0, bool > *p_31_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awvalid.bind(*p_31_m_axi_awvalid);
        p_31_m_axi_awvalid->set_sv_netview_offsetfromdp(7534904);
        xsim_sc_channel<0, bool > *p_31_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_awready.bind(*p_31_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_wdata.bind(*p_31_m_axi_wdata);
        p_31_m_axi_wdata->set_sv_netview_offsetfromdp(7535016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_wstrb.bind(*p_31_m_axi_wstrb);
        p_31_m_axi_wstrb->set_sv_netview_offsetfromdp(7535072);
        xsim_sc_channel<0, bool > *p_31_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wlast.bind(*p_31_m_axi_wlast);
        p_31_m_axi_wlast->set_sv_netview_offsetfromdp(7535128);
        xsim_sc_channel<0, bool > *p_31_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wvalid.bind(*p_31_m_axi_wvalid);
        p_31_m_axi_wvalid->set_sv_netview_offsetfromdp(7535184);
        xsim_sc_channel<0, bool > *p_31_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_wready.bind(*p_31_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_bresp.bind(*p_31_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_buser.bind(*p_31_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_buser);
        xsim_sc_channel<0, bool > *p_31_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bvalid.bind(*p_31_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_bready.bind(*p_31_m_axi_bready);
        p_31_m_axi_bready->set_sv_netview_offsetfromdp(7535464);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->m_axi_araddr.bind(*p_31_m_axi_araddr);
        p_31_m_axi_araddr->set_sv_netview_offsetfromdp(7535520);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axi_arlen.bind(*p_31_m_axi_arlen);
        p_31_m_axi_arlen->set_sv_netview_offsetfromdp(7535576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_arburst.bind(*p_31_m_axi_arburst);
        p_31_m_axi_arburst->set_sv_netview_offsetfromdp(7535632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->m_axi_arlock.bind(*p_31_m_axi_arlock);
        p_31_m_axi_arlock->set_sv_netview_offsetfromdp(7535688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arcache.bind(*p_31_m_axi_arcache);
        p_31_m_axi_arcache->set_sv_netview_offsetfromdp(7535744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->m_axi_arprot.bind(*p_31_m_axi_arprot);
        p_31_m_axi_arprot->set_sv_netview_offsetfromdp(7535800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->m_axi_arqos.bind(*p_31_m_axi_arqos);
        p_31_m_axi_arqos->set_sv_netview_offsetfromdp(7535856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_aruser.bind(*p_31_m_axi_aruser);
        p_31_m_axi_aruser->set_sv_netview_offsetfromdp(7535912);
        xsim_sc_channel<0, bool > *p_31_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arvalid.bind(*p_31_m_axi_arvalid);
        p_31_m_axi_arvalid->set_sv_netview_offsetfromdp(7535968);
        xsim_sc_channel<0, bool > *p_31_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_arready.bind(*p_31_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->m_axi_rdata.bind(*p_31_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->m_axi_rresp.bind(*p_31_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_31_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rlast.bind(*p_31_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_31_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rvalid.bind(*p_31_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_31_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axi_rready.bind(*p_31_m_axi_rready);
        p_31_m_axi_rready->set_sv_netview_offsetfromdp(7536304);
        sc_inst_32 = new pfm_top_axi_vip_3_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_3");
        sc_inst_32->xsim_set_dbg_index(441);
        xsim_sc_channel<0, bool > *p_32_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_32->aclk.bind(*p_32_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aclk);
        xsim_sc_channel<0, bool > *p_32_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->aresetn.bind(*p_32_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->s_axi_awlen.bind(*p_32_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_awburst.bind(*p_32_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->s_axi_awlock.bind(*p_32_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awcache.bind(*p_32_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_awqos.bind(*p_32_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_awuser.bind(*p_32_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(7537024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wlast.bind(*p_32_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(7537304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(7537360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_buser.bind(*p_32_s_axi_buser);
        p_32_s_axi_buser->set_sv_netview_offsetfromdp(7537416);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(7537472);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->s_axi_arlen.bind(*p_32_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_arburst.bind(*p_32_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->s_axi_arlock.bind(*p_32_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arcache.bind(*p_32_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_arqos.bind(*p_32_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_aruser.bind(*p_32_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(7538088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(7538144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(7538200);
        xsim_sc_channel<0, bool > *p_32_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rlast.bind(*p_32_s_axi_rlast);
        p_32_s_axi_rlast->set_sv_netview_offsetfromdp(7538256);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(7538312);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->m_axi_awaddr.bind(*p_32_m_axi_awaddr);
        p_32_m_axi_awaddr->set_sv_netview_offsetfromdp(7538424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->m_axi_awlen.bind(*p_32_m_axi_awlen);
        p_32_m_axi_awlen->set_sv_netview_offsetfromdp(7538480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_awburst.bind(*p_32_m_axi_awburst);
        p_32_m_axi_awburst->set_sv_netview_offsetfromdp(7538536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_axi_awlock.bind(*p_32_m_axi_awlock);
        p_32_m_axi_awlock->set_sv_netview_offsetfromdp(7538592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awcache.bind(*p_32_m_axi_awcache);
        p_32_m_axi_awcache->set_sv_netview_offsetfromdp(7538648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_awprot.bind(*p_32_m_axi_awprot);
        p_32_m_axi_awprot->set_sv_netview_offsetfromdp(7538704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_awqos.bind(*p_32_m_axi_awqos);
        p_32_m_axi_awqos->set_sv_netview_offsetfromdp(7538760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_awuser.bind(*p_32_m_axi_awuser);
        p_32_m_axi_awuser->set_sv_netview_offsetfromdp(7538816);
        xsim_sc_channel<0, bool > *p_32_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awvalid.bind(*p_32_m_axi_awvalid);
        p_32_m_axi_awvalid->set_sv_netview_offsetfromdp(7538872);
        xsim_sc_channel<0, bool > *p_32_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_awready.bind(*p_32_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_wdata.bind(*p_32_m_axi_wdata);
        p_32_m_axi_wdata->set_sv_netview_offsetfromdp(7538984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_wstrb.bind(*p_32_m_axi_wstrb);
        p_32_m_axi_wstrb->set_sv_netview_offsetfromdp(7539040);
        xsim_sc_channel<0, bool > *p_32_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wlast.bind(*p_32_m_axi_wlast);
        p_32_m_axi_wlast->set_sv_netview_offsetfromdp(7539096);
        xsim_sc_channel<0, bool > *p_32_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wvalid.bind(*p_32_m_axi_wvalid);
        p_32_m_axi_wvalid->set_sv_netview_offsetfromdp(7539152);
        xsim_sc_channel<0, bool > *p_32_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_wready.bind(*p_32_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_bresp.bind(*p_32_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_buser.bind(*p_32_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_buser);
        xsim_sc_channel<0, bool > *p_32_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bvalid.bind(*p_32_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_bready.bind(*p_32_m_axi_bready);
        p_32_m_axi_bready->set_sv_netview_offsetfromdp(7539432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->m_axi_araddr.bind(*p_32_m_axi_araddr);
        p_32_m_axi_araddr->set_sv_netview_offsetfromdp(7539488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->m_axi_arlen.bind(*p_32_m_axi_arlen);
        p_32_m_axi_arlen->set_sv_netview_offsetfromdp(7539544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_arburst.bind(*p_32_m_axi_arburst);
        p_32_m_axi_arburst->set_sv_netview_offsetfromdp(7539600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_axi_arlock.bind(*p_32_m_axi_arlock);
        p_32_m_axi_arlock->set_sv_netview_offsetfromdp(7539656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arcache.bind(*p_32_m_axi_arcache);
        p_32_m_axi_arcache->set_sv_netview_offsetfromdp(7539712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->m_axi_arprot.bind(*p_32_m_axi_arprot);
        p_32_m_axi_arprot->set_sv_netview_offsetfromdp(7539768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->m_axi_arqos.bind(*p_32_m_axi_arqos);
        p_32_m_axi_arqos->set_sv_netview_offsetfromdp(7539824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_aruser.bind(*p_32_m_axi_aruser);
        p_32_m_axi_aruser->set_sv_netview_offsetfromdp(7539880);
        xsim_sc_channel<0, bool > *p_32_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arvalid.bind(*p_32_m_axi_arvalid);
        p_32_m_axi_arvalid->set_sv_netview_offsetfromdp(7539936);
        xsim_sc_channel<0, bool > *p_32_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_arready.bind(*p_32_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->m_axi_rdata.bind(*p_32_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->m_axi_rresp.bind(*p_32_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_32_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rlast.bind(*p_32_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_32_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rvalid.bind(*p_32_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_32_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axi_rready.bind(*p_32_m_axi_rready);
        p_32_m_axi_rready->set_sv_netview_offsetfromdp(7540272);
        sc_inst_33 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_33->xsim_set_dbg_index(1016);
        xsim_sc_channel<0, bool > *p_33_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_33->aclk.bind(*p_33_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aclk);
        xsim_sc_channel<0, bool > *p_33_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->aresetn.bind(*p_33_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_33_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_33->s_axi_awaddr.bind(*p_33_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_33_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_33->s_axi_awprot.bind(*p_33_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awvalid.bind(*p_33_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_awready.bind(*p_33_s_axi_awready);
        p_33_s_axi_awready->set_sv_netview_offsetfromdp(7672376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->s_axi_wdata.bind(*p_33_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->s_axi_wstrb.bind(*p_33_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_wvalid.bind(*p_33_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_wready.bind(*p_33_s_axi_wready);
        p_33_s_axi_wready->set_sv_netview_offsetfromdp(7672600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_bresp.bind(*p_33_s_axi_bresp);
        p_33_s_axi_bresp->set_sv_netview_offsetfromdp(7672656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bvalid.bind(*p_33_s_axi_bvalid);
        p_33_s_axi_bvalid->set_sv_netview_offsetfromdp(7672712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bready.bind(*p_33_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_33_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_33->s_axi_araddr.bind(*p_33_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_33_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_33->s_axi_arprot.bind(*p_33_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arvalid.bind(*p_33_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_arready.bind(*p_33_s_axi_arready);
        p_33_s_axi_arready->set_sv_netview_offsetfromdp(7672992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->s_axi_rdata.bind(*p_33_s_axi_rdata);
        p_33_s_axi_rdata->set_sv_netview_offsetfromdp(7673048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_rresp.bind(*p_33_s_axi_rresp);
        p_33_s_axi_rresp->set_sv_netview_offsetfromdp(7673104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rvalid.bind(*p_33_s_axi_rvalid);
        p_33_s_axi_rvalid->set_sv_netview_offsetfromdp(7673160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rready.bind(*p_33_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_33_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_33->m_axi_awaddr.bind(*p_33_m_axi_awaddr);
        p_33_m_axi_awaddr->set_sv_netview_offsetfromdp(7673272);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_33_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_33->m_axi_awprot.bind(*p_33_m_axi_awprot);
        p_33_m_axi_awprot->set_sv_netview_offsetfromdp(7673328);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_awvalid.bind(*p_33_m_axi_awvalid);
        p_33_m_axi_awvalid->set_sv_netview_offsetfromdp(7673384);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_awready.bind(*p_33_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_33_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_33->m_axi_wdata.bind(*p_33_m_axi_wdata);
        p_33_m_axi_wdata->set_sv_netview_offsetfromdp(7673496);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_33_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_33->m_axi_wstrb.bind(*p_33_m_axi_wstrb);
        p_33_m_axi_wstrb->set_sv_netview_offsetfromdp(7673552);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_wvalid.bind(*p_33_m_axi_wvalid);
        p_33_m_axi_wvalid->set_sv_netview_offsetfromdp(7673608);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_wready.bind(*p_33_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_33_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_33->m_axi_bresp.bind(*p_33_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_bvalid.bind(*p_33_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_bready.bind(*p_33_m_axi_bready);
        p_33_m_axi_bready->set_sv_netview_offsetfromdp(7673832);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_33_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_33->m_axi_araddr.bind(*p_33_m_axi_araddr);
        p_33_m_axi_araddr->set_sv_netview_offsetfromdp(7673888);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_33_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_33->m_axi_arprot.bind(*p_33_m_axi_arprot);
        p_33_m_axi_arprot->set_sv_netview_offsetfromdp(7673944);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_arvalid.bind(*p_33_m_axi_arvalid);
        p_33_m_axi_arvalid->set_sv_netview_offsetfromdp(7674000);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_arready.bind(*p_33_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_33_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_33->m_axi_rdata.bind(*p_33_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_33_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_33->m_axi_rresp.bind(*p_33_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_rvalid.bind(*p_33_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_33_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_33->m_axi_rready.bind(*p_33_m_axi_rready);
        p_33_m_axi_rready->set_sv_netview_offsetfromdp(7674280);
        sc_inst_34 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_34->xsim_set_dbg_index(445);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_34_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_34->interrupt_cu.bind(*p_34_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_34_interrupt_cu);
        xsim_sc_channel<0, bool > *p_34_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_34->interrupt_m2m.bind(*p_34_interrupt_m2m);
        p_34_interrupt_m2m->set_sv_netview_offsetfromdp(7676168);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_aresetn.bind(*p_34_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_aresetn.bind(*p_34_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_aresetn.bind(*p_34_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_aresetn.bind(*p_34_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_aclk.bind(*p_34_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_aclk.bind(*p_34_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_aclk.bind(*p_34_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_aclk.bind(*p_34_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->s_axi_data_p2p_awaddr.bind(*p_34_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_data_p2p_awlen.bind(*p_34_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_data_p2p_awsize.bind(*p_34_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_data_p2p_awburst.bind(*p_34_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_awlock.bind(*p_34_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_data_p2p_awcache.bind(*p_34_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_data_p2p_awprot.bind(*p_34_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_data_p2p_awregion.bind(*p_34_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_data_p2p_awqos.bind(*p_34_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_data_p2p_awuser.bind(*p_34_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_awvalid.bind(*p_34_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_awready.bind(*p_34_s_axi_data_p2p_awready);
        p_34_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(7677288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_data_p2p_wdata.bind(*p_34_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_data_p2p_wstrb.bind(*p_34_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_wlast.bind(*p_34_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_wvalid.bind(*p_34_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_wready.bind(*p_34_s_axi_data_p2p_wready);
        p_34_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(7677568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_data_p2p_bresp.bind(*p_34_s_axi_data_p2p_bresp);
        p_34_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(7677624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_data_p2p_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_data_p2p_buser.bind(*p_34_s_axi_data_p2p_buser);
        p_34_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(7677680);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_bvalid.bind(*p_34_s_axi_data_p2p_bvalid);
        p_34_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(7677736);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_bready.bind(*p_34_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->s_axi_data_p2p_araddr.bind(*p_34_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_data_p2p_arlen.bind(*p_34_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_data_p2p_arsize.bind(*p_34_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_data_p2p_arburst.bind(*p_34_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_arlock.bind(*p_34_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_data_p2p_arcache.bind(*p_34_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_data_p2p_arprot.bind(*p_34_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_data_p2p_arregion.bind(*p_34_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_data_p2p_arqos.bind(*p_34_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_data_p2p_aruser.bind(*p_34_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_arvalid.bind(*p_34_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_arready.bind(*p_34_s_axi_data_p2p_arready);
        p_34_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(7678464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_data_p2p_rdata.bind(*p_34_s_axi_data_p2p_rdata);
        p_34_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(7678520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_data_p2p_rresp.bind(*p_34_s_axi_data_p2p_rresp);
        p_34_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(7678576);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_rlast.bind(*p_34_s_axi_data_p2p_rlast);
        p_34_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(7678632);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_rvalid.bind(*p_34_s_axi_data_p2p_rvalid);
        p_34_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(7678688);
        xsim_sc_channel<0, bool > *p_34_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_data_p2p_rready.bind(*p_34_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->maxi_lite_mb_awaddr.bind(*p_34_maxi_lite_mb_awaddr);
        p_34_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(7678800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->maxi_lite_mb_awprot.bind(*p_34_maxi_lite_mb_awprot);
        p_34_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(7678856);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_awvalid.bind(*p_34_maxi_lite_mb_awvalid);
        p_34_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(7678912);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_awready.bind(*p_34_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->maxi_lite_mb_wdata.bind(*p_34_maxi_lite_mb_wdata);
        p_34_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(7679024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->maxi_lite_mb_wstrb.bind(*p_34_maxi_lite_mb_wstrb);
        p_34_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(7679080);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_wvalid.bind(*p_34_maxi_lite_mb_wvalid);
        p_34_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(7679136);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_wready.bind(*p_34_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->maxi_lite_mb_bresp.bind(*p_34_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_bvalid.bind(*p_34_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_bready.bind(*p_34_maxi_lite_mb_bready);
        p_34_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(7679360);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->maxi_lite_mb_araddr.bind(*p_34_maxi_lite_mb_araddr);
        p_34_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(7679416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->maxi_lite_mb_arprot.bind(*p_34_maxi_lite_mb_arprot);
        p_34_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(7679472);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_arvalid.bind(*p_34_maxi_lite_mb_arvalid);
        p_34_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(7679528);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_arready.bind(*p_34_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->maxi_lite_mb_rdata.bind(*p_34_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->maxi_lite_mb_rresp.bind(*p_34_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_rvalid.bind(*p_34_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_34_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->maxi_lite_mb_rready.bind(*p_34_maxi_lite_mb_rready);
        p_34_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(7679808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_axi_data_m2m_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_axi_data_m2m_awid.bind(*p_34_m_axi_data_m2m_awid);
        p_34_m_axi_data_m2m_awid->set_sv_netview_offsetfromdp(7679864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_axi_data_m2m_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_axi_data_m2m_awaddr.bind(*p_34_m_axi_data_m2m_awaddr);
        p_34_m_axi_data_m2m_awaddr->set_sv_netview_offsetfromdp(7679920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_axi_data_m2m_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_axi_data_m2m_awlen.bind(*p_34_m_axi_data_m2m_awlen);
        p_34_m_axi_data_m2m_awlen->set_sv_netview_offsetfromdp(7679976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axi_data_m2m_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axi_data_m2m_awsize.bind(*p_34_m_axi_data_m2m_awsize);
        p_34_m_axi_data_m2m_awsize->set_sv_netview_offsetfromdp(7680032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_data_m2m_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_data_m2m_awburst.bind(*p_34_m_axi_data_m2m_awburst);
        p_34_m_axi_data_m2m_awburst->set_sv_netview_offsetfromdp(7680088);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_awlock.bind(*p_34_m_axi_data_m2m_awlock);
        p_34_m_axi_data_m2m_awlock->set_sv_netview_offsetfromdp(7680144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_awcache.bind(*p_34_m_axi_data_m2m_awcache);
        p_34_m_axi_data_m2m_awcache->set_sv_netview_offsetfromdp(7680200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axi_data_m2m_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axi_data_m2m_awprot.bind(*p_34_m_axi_data_m2m_awprot);
        p_34_m_axi_data_m2m_awprot->set_sv_netview_offsetfromdp(7680256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_awqos.bind(*p_34_m_axi_data_m2m_awqos);
        p_34_m_axi_data_m2m_awqos->set_sv_netview_offsetfromdp(7680312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_awuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_awuser.bind(*p_34_m_axi_data_m2m_awuser);
        p_34_m_axi_data_m2m_awuser->set_sv_netview_offsetfromdp(7680368);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_awvalid.bind(*p_34_m_axi_data_m2m_awvalid);
        p_34_m_axi_data_m2m_awvalid->set_sv_netview_offsetfromdp(7680424);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_awready.bind(*p_34_m_axi_data_m2m_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_axi_data_m2m_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_axi_data_m2m_wdata.bind(*p_34_m_axi_data_m2m_wdata);
        p_34_m_axi_data_m2m_wdata->set_sv_netview_offsetfromdp(7680536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_wstrb.bind(*p_34_m_axi_data_m2m_wstrb);
        p_34_m_axi_data_m2m_wstrb->set_sv_netview_offsetfromdp(7680592);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_wlast.bind(*p_34_m_axi_data_m2m_wlast);
        p_34_m_axi_data_m2m_wlast->set_sv_netview_offsetfromdp(7680648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_wuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_wuser.bind(*p_34_m_axi_data_m2m_wuser);
        p_34_m_axi_data_m2m_wuser->set_sv_netview_offsetfromdp(7680704);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_wvalid.bind(*p_34_m_axi_data_m2m_wvalid);
        p_34_m_axi_data_m2m_wvalid->set_sv_netview_offsetfromdp(7680760);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_wready.bind(*p_34_m_axi_data_m2m_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_axi_data_m2m_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_axi_data_m2m_bid.bind(*p_34_m_axi_data_m2m_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_data_m2m_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_data_m2m_bresp.bind(*p_34_m_axi_data_m2m_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_buser.bind(*p_34_m_axi_data_m2m_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_buser);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_bvalid.bind(*p_34_m_axi_data_m2m_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_bvalid);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_bready.bind(*p_34_m_axi_data_m2m_bready);
        p_34_m_axi_data_m2m_bready->set_sv_netview_offsetfromdp(7681096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_axi_data_m2m_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_axi_data_m2m_arid.bind(*p_34_m_axi_data_m2m_arid);
        p_34_m_axi_data_m2m_arid->set_sv_netview_offsetfromdp(7681152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_axi_data_m2m_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_axi_data_m2m_araddr.bind(*p_34_m_axi_data_m2m_araddr);
        p_34_m_axi_data_m2m_araddr->set_sv_netview_offsetfromdp(7681208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_axi_data_m2m_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_axi_data_m2m_arlen.bind(*p_34_m_axi_data_m2m_arlen);
        p_34_m_axi_data_m2m_arlen->set_sv_netview_offsetfromdp(7681264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axi_data_m2m_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axi_data_m2m_arsize.bind(*p_34_m_axi_data_m2m_arsize);
        p_34_m_axi_data_m2m_arsize->set_sv_netview_offsetfromdp(7681320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_data_m2m_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_data_m2m_arburst.bind(*p_34_m_axi_data_m2m_arburst);
        p_34_m_axi_data_m2m_arburst->set_sv_netview_offsetfromdp(7681376);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_arlock.bind(*p_34_m_axi_data_m2m_arlock);
        p_34_m_axi_data_m2m_arlock->set_sv_netview_offsetfromdp(7681432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_arcache.bind(*p_34_m_axi_data_m2m_arcache);
        p_34_m_axi_data_m2m_arcache->set_sv_netview_offsetfromdp(7681488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_m_axi_data_m2m_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->m_axi_data_m2m_arprot.bind(*p_34_m_axi_data_m2m_arprot);
        p_34_m_axi_data_m2m_arprot->set_sv_netview_offsetfromdp(7681544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_arqos.bind(*p_34_m_axi_data_m2m_arqos);
        p_34_m_axi_data_m2m_arqos->set_sv_netview_offsetfromdp(7681600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_aruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_aruser.bind(*p_34_m_axi_data_m2m_aruser);
        p_34_m_axi_data_m2m_aruser->set_sv_netview_offsetfromdp(7681656);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_arvalid.bind(*p_34_m_axi_data_m2m_arvalid);
        p_34_m_axi_data_m2m_arvalid->set_sv_netview_offsetfromdp(7681712);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_arready.bind(*p_34_m_axi_data_m2m_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_m_axi_data_m2m_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->m_axi_data_m2m_rid.bind(*p_34_m_axi_data_m2m_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_m_axi_data_m2m_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->m_axi_data_m2m_rdata.bind(*p_34_m_axi_data_m2m_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_m_axi_data_m2m_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->m_axi_data_m2m_rresp.bind(*p_34_m_axi_data_m2m_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_rresp);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_rlast.bind(*p_34_m_axi_data_m2m_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_rlast);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_m_axi_data_m2m_ruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->m_axi_data_m2m_ruser.bind(*p_34_m_axi_data_m2m_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_ruser);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_rvalid.bind(*p_34_m_axi_data_m2m_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axi_data_m2m_rvalid);
        xsim_sc_channel<0, bool > *p_34_m_axi_data_m2m_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axi_data_m2m_rready.bind(*p_34_m_axi_data_m2m_rready);
        p_34_m_axi_data_m2m_rready->set_sv_netview_offsetfromdp(7682160);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->s_axi_ctrl_user_awaddr.bind(*p_34_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_ctrl_user_awprot.bind(*p_34_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_awvalid.bind(*p_34_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_awready.bind(*p_34_s_axi_ctrl_user_awready);
        p_34_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(7682384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_ctrl_user_wdata.bind(*p_34_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_ctrl_user_wstrb.bind(*p_34_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_wvalid.bind(*p_34_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_wready.bind(*p_34_s_axi_ctrl_user_wready);
        p_34_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(7682608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_ctrl_user_bresp.bind(*p_34_s_axi_ctrl_user_bresp);
        p_34_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(7682664);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_bvalid.bind(*p_34_s_axi_ctrl_user_bvalid);
        p_34_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(7682720);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_bready.bind(*p_34_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->s_axi_ctrl_user_araddr.bind(*p_34_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_ctrl_user_arprot.bind(*p_34_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_arvalid.bind(*p_34_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_arready.bind(*p_34_s_axi_ctrl_user_arready);
        p_34_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(7683000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_ctrl_user_rdata.bind(*p_34_s_axi_ctrl_user_rdata);
        p_34_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(7683056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_ctrl_user_rresp.bind(*p_34_s_axi_ctrl_user_rresp);
        p_34_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(7683112);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_rvalid.bind(*p_34_s_axi_ctrl_user_rvalid);
        p_34_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(7683168);
        xsim_sc_channel<0, bool > *p_34_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_ctrl_user_rready.bind(*p_34_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_ctrl_user_rready);
        sc_inst_35 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_35->xsim_set_dbg_index(447);
        xsim_sc_channel<0, bool > *p_35_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_aclk.bind(*p_35_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_35_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_aresetn.bind(*p_35_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_35_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_aximm_aclk.bind(*p_35_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_35_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_aximm_aresetn.bind(*p_35_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_35_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_AWVALID.bind(*p_35_m_aximm_AWVALID);
        p_35_m_aximm_AWVALID->set_sv_netview_offsetfromdp(7729728);
        xsim_sc_channel<0, bool > *p_35_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_AWREADY.bind(*p_35_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->m_aximm_AWADDR.bind(*p_35_m_aximm_AWADDR);
        p_35_m_aximm_AWADDR->set_sv_netview_offsetfromdp(7729840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_AWID.bind(*p_35_m_aximm_AWID);
        p_35_m_aximm_AWID->set_sv_netview_offsetfromdp(7729896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->m_aximm_AWLEN.bind(*p_35_m_aximm_AWLEN);
        p_35_m_aximm_AWLEN->set_sv_netview_offsetfromdp(7729952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->m_aximm_AWSIZE.bind(*p_35_m_aximm_AWSIZE);
        p_35_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(7730008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_aximm_AWBURST.bind(*p_35_m_aximm_AWBURST);
        p_35_m_aximm_AWBURST->set_sv_netview_offsetfromdp(7730064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_AWLOCK.bind(*p_35_m_aximm_AWLOCK);
        p_35_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(7730120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_aximm_AWCACHE.bind(*p_35_m_aximm_AWCACHE);
        p_35_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(7730176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->m_aximm_AWPROT.bind(*p_35_m_aximm_AWPROT);
        p_35_m_aximm_AWPROT->set_sv_netview_offsetfromdp(7730232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_aximm_AWREGION.bind(*p_35_m_aximm_AWREGION);
        p_35_m_aximm_AWREGION->set_sv_netview_offsetfromdp(7730288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_aximm_AWQOS.bind(*p_35_m_aximm_AWQOS);
        p_35_m_aximm_AWQOS->set_sv_netview_offsetfromdp(7730344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_AWUSER.bind(*p_35_m_aximm_AWUSER);
        p_35_m_aximm_AWUSER->set_sv_netview_offsetfromdp(7730400);
        xsim_sc_channel<0, bool > *p_35_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_WVALID.bind(*p_35_m_aximm_WVALID);
        p_35_m_aximm_WVALID->set_sv_netview_offsetfromdp(7730456);
        xsim_sc_channel<0, bool > *p_35_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_WREADY.bind(*p_35_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->m_aximm_WDATA.bind(*p_35_m_aximm_WDATA);
        p_35_m_aximm_WDATA->set_sv_netview_offsetfromdp(7730568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_aximm_WSTRB.bind(*p_35_m_aximm_WSTRB);
        p_35_m_aximm_WSTRB->set_sv_netview_offsetfromdp(7730624);
        xsim_sc_channel<0, bool > *p_35_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_WLAST.bind(*p_35_m_aximm_WLAST);
        p_35_m_aximm_WLAST->set_sv_netview_offsetfromdp(7730680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_WUSER.bind(*p_35_m_aximm_WUSER);
        p_35_m_aximm_WUSER->set_sv_netview_offsetfromdp(7730736);
        xsim_sc_channel<0, bool > *p_35_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_ARVALID.bind(*p_35_m_aximm_ARVALID);
        p_35_m_aximm_ARVALID->set_sv_netview_offsetfromdp(7730792);
        xsim_sc_channel<0, bool > *p_35_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_ARREADY.bind(*p_35_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_35_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_35->m_aximm_ARADDR.bind(*p_35_m_aximm_ARADDR);
        p_35_m_aximm_ARADDR->set_sv_netview_offsetfromdp(7730904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_ARID.bind(*p_35_m_aximm_ARID);
        p_35_m_aximm_ARID->set_sv_netview_offsetfromdp(7730960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->m_aximm_ARLEN.bind(*p_35_m_aximm_ARLEN);
        p_35_m_aximm_ARLEN->set_sv_netview_offsetfromdp(7731016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->m_aximm_ARSIZE.bind(*p_35_m_aximm_ARSIZE);
        p_35_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(7731072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_aximm_ARBURST.bind(*p_35_m_aximm_ARBURST);
        p_35_m_aximm_ARBURST->set_sv_netview_offsetfromdp(7731128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_ARLOCK.bind(*p_35_m_aximm_ARLOCK);
        p_35_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(7731184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_aximm_ARCACHE.bind(*p_35_m_aximm_ARCACHE);
        p_35_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(7731240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->m_aximm_ARPROT.bind(*p_35_m_aximm_ARPROT);
        p_35_m_aximm_ARPROT->set_sv_netview_offsetfromdp(7731296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_aximm_ARREGION.bind(*p_35_m_aximm_ARREGION);
        p_35_m_aximm_ARREGION->set_sv_netview_offsetfromdp(7731352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->m_aximm_ARQOS.bind(*p_35_m_aximm_ARQOS);
        p_35_m_aximm_ARQOS->set_sv_netview_offsetfromdp(7731408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_ARUSER.bind(*p_35_m_aximm_ARUSER);
        p_35_m_aximm_ARUSER->set_sv_netview_offsetfromdp(7731464);
        xsim_sc_channel<0, bool > *p_35_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_RVALID.bind(*p_35_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_35_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_RREADY.bind(*p_35_m_aximm_RREADY);
        p_35_m_aximm_RREADY->set_sv_netview_offsetfromdp(7731576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->m_aximm_RDATA.bind(*p_35_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_35_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_RLAST.bind(*p_35_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_RID.bind(*p_35_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_aximm_RRESP.bind(*p_35_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_RUSER.bind(*p_35_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_35_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_BVALID.bind(*p_35_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_35_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_35->m_aximm_BREADY.bind(*p_35_m_aximm_BREADY);
        p_35_m_aximm_BREADY->set_sv_netview_offsetfromdp(7731968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->m_aximm_BRESP.bind(*p_35_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_BID.bind(*p_35_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->m_aximm_BUSER.bind(*p_35_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_35_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->s_axi_awaddr.bind(*p_35_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->s_axi_awlen.bind(*p_35_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->s_axi_awsize.bind(*p_35_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_awburst.bind(*p_35_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->s_axi_awlock.bind(*p_35_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_awcache.bind(*p_35_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->s_axi_awprot.bind(*p_35_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_awregion.bind(*p_35_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_awqos.bind(*p_35_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->s_axi_awuser.bind(*p_35_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_35_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_awvalid.bind(*p_35_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_35_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_awready.bind(*p_35_s_axi_awready);
        p_35_s_axi_awready->set_sv_netview_offsetfromdp(7732808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->s_axi_wdata.bind(*p_35_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_wstrb.bind(*p_35_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_35_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_wlast.bind(*p_35_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_35_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_wvalid.bind(*p_35_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_35_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_wready.bind(*p_35_s_axi_wready);
        p_35_s_axi_wready->set_sv_netview_offsetfromdp(7733088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_bresp.bind(*p_35_s_axi_bresp);
        p_35_s_axi_bresp->set_sv_netview_offsetfromdp(7733144);
        xsim_sc_channel<0, bool > *p_35_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_bvalid.bind(*p_35_s_axi_bvalid);
        p_35_s_axi_bvalid->set_sv_netview_offsetfromdp(7733200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_buser.bind(*p_35_s_axi_buser);
        p_35_s_axi_buser->set_sv_netview_offsetfromdp(7733256);
        xsim_sc_channel<0, bool > *p_35_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_bready.bind(*p_35_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->s_axi_araddr.bind(*p_35_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_35_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_35->s_axi_arlen.bind(*p_35_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->s_axi_arsize.bind(*p_35_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_arburst.bind(*p_35_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_35_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_35->s_axi_arlock.bind(*p_35_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_arcache.bind(*p_35_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_35_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_35->s_axi_arprot.bind(*p_35_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_arregion.bind(*p_35_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_35_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_35->s_axi_arqos.bind(*p_35_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->s_axi_aruser.bind(*p_35_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_35_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_arvalid.bind(*p_35_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_35_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_arready.bind(*p_35_s_axi_arready);
        p_35_s_axi_arready->set_sv_netview_offsetfromdp(7733984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_35_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_35->s_axi_rdata.bind(*p_35_s_axi_rdata);
        p_35_s_axi_rdata->set_sv_netview_offsetfromdp(7734040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_35_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_35->s_axi_rresp.bind(*p_35_s_axi_rresp);
        p_35_s_axi_rresp->set_sv_netview_offsetfromdp(7734096);
        xsim_sc_channel<0, bool > *p_35_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_rlast.bind(*p_35_s_axi_rlast);
        p_35_s_axi_rlast->set_sv_netview_offsetfromdp(7734152);
        xsim_sc_channel<0, bool > *p_35_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_rvalid.bind(*p_35_s_axi_rvalid);
        p_35_s_axi_rvalid->set_sv_netview_offsetfromdp(7734208);
        xsim_sc_channel<0, bool > *p_35_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_35->s_axi_rready.bind(*p_35_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_35_s_axi_rready);
        sc_inst_36 = new pfm_top_sim_ddr_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_ddr_0");
        sc_inst_36->xsim_set_dbg_index(448);
        xsim_sc_channel<0, bool > *p_36_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_init_calib_complete.bind(*p_36_c0_init_calib_complete);
        p_36_c0_init_calib_complete->set_sv_netview_offsetfromdp(7734368);
        xsim_sc_channel<0, bool > *p_36_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_36->dbg_clk.bind(*p_36_dbg_clk);
        p_36_dbg_clk->set_sv_netview_offsetfromdp(7734424);
        xsim_sc_channel<0, bool > *p_36_c0_sys_clk_i = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_sys_clk_i.bind(*p_36_c0_sys_clk_i);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_sys_clk_i);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->dbg_bus.bind(*p_36_dbg_bus);
        p_36_dbg_bus->set_sv_netview_offsetfromdp(7734536);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_36_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_36->c0_ddr4_adr.bind(*p_36_c0_ddr4_adr);
        p_36_c0_ddr4_adr->set_sv_netview_offsetfromdp(7734592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->c0_ddr4_ba.bind(*p_36_c0_ddr4_ba);
        p_36_c0_ddr4_ba->set_sv_netview_offsetfromdp(7734648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_cke.bind(*p_36_c0_ddr4_cke);
        p_36_c0_ddr4_cke->set_sv_netview_offsetfromdp(7734704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_cs_n.bind(*p_36_c0_ddr4_cs_n);
        p_36_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(7734760);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_36_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_36->c0_ddr4_dq.bind(*p_36_c0_ddr4_dq);
        p_36_c0_ddr4_dq->set_sv_netview_offsetfromdp(7734816);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_36_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_36->c0_ddr4_dqs_c.bind(*p_36_c0_ddr4_dqs_c);
        p_36_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(7734872);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_36_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_36->c0_ddr4_dqs_t.bind(*p_36_c0_ddr4_dqs_t);
        p_36_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(7734928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_odt.bind(*p_36_c0_ddr4_odt);
        p_36_c0_ddr4_odt->set_sv_netview_offsetfromdp(7734984);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_parity.bind(*p_36_c0_ddr4_parity);
        p_36_c0_ddr4_parity->set_sv_netview_offsetfromdp(7735040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->c0_ddr4_bg.bind(*p_36_c0_ddr4_bg);
        p_36_c0_ddr4_bg->set_sv_netview_offsetfromdp(7735096);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_reset_n.bind(*p_36_c0_ddr4_reset_n);
        p_36_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(7735152);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_act_n.bind(*p_36_c0_ddr4_act_n);
        p_36_c0_ddr4_act_n->set_sv_netview_offsetfromdp(7735208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_ck_c.bind(*p_36_c0_ddr4_ck_c);
        p_36_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(7735264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_ck_t.bind(*p_36_c0_ddr4_ck_t);
        p_36_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(7735320);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_ui_clk.bind(*p_36_c0_ddr4_ui_clk);
        p_36_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(7735376);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_ui_clk_sync_rst.bind(*p_36_c0_ddr4_ui_clk_sync_rst);
        p_36_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(7735432);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_aresetn.bind(*p_36_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_36_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_awready.bind(*p_36_c0_ddr4_s_axi_ctrl_awready);
        p_36_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(7735600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_36_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_36_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_wready.bind(*p_36_c0_ddr4_s_axi_ctrl_wready);
        p_36_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(7735768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_wdata.bind(*p_36_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_36_c0_ddr4_s_axi_ctrl_bvalid);
        p_36_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(7735880);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_bready.bind(*p_36_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_bresp.bind(*p_36_c0_ddr4_s_axi_ctrl_bresp);
        p_36_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(7735992);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_36_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_arready.bind(*p_36_c0_ddr4_s_axi_ctrl_arready);
        p_36_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(7736104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_araddr.bind(*p_36_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_36_c0_ddr4_s_axi_ctrl_rvalid);
        p_36_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(7736216);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_rready.bind(*p_36_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_rdata.bind(*p_36_c0_ddr4_s_axi_ctrl_rdata);
        p_36_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(7736328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->c0_ddr4_s_axi_ctrl_rresp.bind(*p_36_c0_ddr4_s_axi_ctrl_rresp);
        p_36_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(7736384);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_interrupt.bind(*p_36_c0_ddr4_interrupt);
        p_36_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(7736440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_s_axi_awid.bind(*p_36_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_36_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_36->c0_ddr4_s_axi_awaddr.bind(*p_36_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->c0_ddr4_s_axi_awlen.bind(*p_36_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->c0_ddr4_s_axi_awsize.bind(*p_36_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->c0_ddr4_s_axi_awburst.bind(*p_36_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_s_axi_awlock.bind(*p_36_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->c0_ddr4_s_axi_awcache.bind(*p_36_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->c0_ddr4_s_axi_awprot.bind(*p_36_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->c0_ddr4_s_axi_awqos.bind(*p_36_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_awvalid.bind(*p_36_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_awready.bind(*p_36_c0_ddr4_s_axi_awready);
        p_36_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(7737056);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->c0_ddr4_s_axi_wdata.bind(*p_36_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_36_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_36->c0_ddr4_s_axi_wstrb.bind(*p_36_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_wlast.bind(*p_36_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_wvalid.bind(*p_36_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_wready.bind(*p_36_c0_ddr4_s_axi_wready);
        p_36_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(7737336);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_bready.bind(*p_36_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_s_axi_bid.bind(*p_36_c0_ddr4_s_axi_bid);
        p_36_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(7737448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->c0_ddr4_s_axi_bresp.bind(*p_36_c0_ddr4_s_axi_bresp);
        p_36_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(7737504);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_bvalid.bind(*p_36_c0_ddr4_s_axi_bvalid);
        p_36_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(7737560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_s_axi_arid.bind(*p_36_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_36_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_36->c0_ddr4_s_axi_araddr.bind(*p_36_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_36_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_36->c0_ddr4_s_axi_arlen.bind(*p_36_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->c0_ddr4_s_axi_arsize.bind(*p_36_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->c0_ddr4_s_axi_arburst.bind(*p_36_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_s_axi_arlock.bind(*p_36_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->c0_ddr4_s_axi_arcache.bind(*p_36_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->c0_ddr4_s_axi_arprot.bind(*p_36_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->c0_ddr4_s_axi_arqos.bind(*p_36_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_arvalid.bind(*p_36_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_arready.bind(*p_36_c0_ddr4_s_axi_arready);
        p_36_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(7738176);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_rready.bind(*p_36_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_36_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_rlast.bind(*p_36_c0_ddr4_s_axi_rlast);
        p_36_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(7738288);
        xsim_sc_channel<0, bool > *p_36_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_36->c0_ddr4_s_axi_rvalid.bind(*p_36_c0_ddr4_s_axi_rvalid);
        p_36_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(7738344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->c0_ddr4_s_axi_rresp.bind(*p_36_c0_ddr4_s_axi_rresp);
        p_36_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(7738400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_36_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_36->c0_ddr4_s_axi_rid.bind(*p_36_c0_ddr4_s_axi_rid);
        p_36_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(7738456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_36_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_36->c0_ddr4_s_axi_rdata.bind(*p_36_c0_ddr4_s_axi_rdata);
        p_36_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(7738512);
        xsim_sc_channel<0, bool > *p_36_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_36->addn_ui_clkout1.bind(*p_36_addn_ui_clkout1);
        p_36_addn_ui_clkout1->set_sv_netview_offsetfromdp(7738568);
        xsim_sc_channel<0, bool > *p_36_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_36->sys_rst.bind(*p_36_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_36_sys_rst);
        sc_inst_37 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_37->xsim_set_dbg_index(449);
        xsim_sc_channel<0, bool > *p_37_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_aclk.bind(*p_37_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_37_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_aresetn.bind(*p_37_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_aclk.bind(*p_37_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_aresetn.bind(*p_37_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_37_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_aximm_aclk.bind(*p_37_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_37_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_aximm_aresetn.bind(*p_37_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->m_axictrl_awaddr.bind(*p_37_m_axictrl_awaddr);
        p_37_m_axictrl_awaddr->set_sv_netview_offsetfromdp(7739064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_axictrl_awprot.bind(*p_37_m_axictrl_awprot);
        p_37_m_axictrl_awprot->set_sv_netview_offsetfromdp(7739120);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_awvalid.bind(*p_37_m_axictrl_awvalid);
        p_37_m_axictrl_awvalid->set_sv_netview_offsetfromdp(7739176);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_awready.bind(*p_37_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_axictrl_wdata.bind(*p_37_m_axictrl_wdata);
        p_37_m_axictrl_wdata->set_sv_netview_offsetfromdp(7739288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_axictrl_wstrb.bind(*p_37_m_axictrl_wstrb);
        p_37_m_axictrl_wstrb->set_sv_netview_offsetfromdp(7739344);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_wvalid.bind(*p_37_m_axictrl_wvalid);
        p_37_m_axictrl_wvalid->set_sv_netview_offsetfromdp(7739400);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_wready.bind(*p_37_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_bvalid.bind(*p_37_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_bready.bind(*p_37_m_axictrl_bready);
        p_37_m_axictrl_bready->set_sv_netview_offsetfromdp(7739568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_axictrl_bresp.bind(*p_37_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->m_axictrl_araddr.bind(*p_37_m_axictrl_araddr);
        p_37_m_axictrl_araddr->set_sv_netview_offsetfromdp(7739680);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_arvalid.bind(*p_37_m_axictrl_arvalid);
        p_37_m_axictrl_arvalid->set_sv_netview_offsetfromdp(7739736);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_arready.bind(*p_37_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_axictrl_arprot.bind(*p_37_m_axictrl_arprot);
        p_37_m_axictrl_arprot->set_sv_netview_offsetfromdp(7739848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_axictrl_rdata.bind(*p_37_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_axictrl_rresp.bind(*p_37_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_rvalid.bind(*p_37_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_37_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_axictrl_rready.bind(*p_37_m_axictrl_rready);
        p_37_m_axictrl_rready->set_sv_netview_offsetfromdp(7740072);
        xsim_sc_channel<0, bool > *p_37_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_AWVALID.bind(*p_37_m_aximm_AWVALID);
        p_37_m_aximm_AWVALID->set_sv_netview_offsetfromdp(7740128);
        xsim_sc_channel<0, bool > *p_37_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_AWREADY.bind(*p_37_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->m_aximm_AWADDR.bind(*p_37_m_aximm_AWADDR);
        p_37_m_aximm_AWADDR->set_sv_netview_offsetfromdp(7740240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_aximm_AWID.bind(*p_37_m_aximm_AWID);
        p_37_m_aximm_AWID->set_sv_netview_offsetfromdp(7740296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->m_aximm_AWLEN.bind(*p_37_m_aximm_AWLEN);
        p_37_m_aximm_AWLEN->set_sv_netview_offsetfromdp(7740352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_aximm_AWSIZE.bind(*p_37_m_aximm_AWSIZE);
        p_37_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(7740408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_aximm_AWBURST.bind(*p_37_m_aximm_AWBURST);
        p_37_m_aximm_AWBURST->set_sv_netview_offsetfromdp(7740464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_aximm_AWLOCK.bind(*p_37_m_aximm_AWLOCK);
        p_37_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(7740520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_aximm_AWCACHE.bind(*p_37_m_aximm_AWCACHE);
        p_37_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(7740576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_aximm_AWPROT.bind(*p_37_m_aximm_AWPROT);
        p_37_m_aximm_AWPROT->set_sv_netview_offsetfromdp(7740632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_aximm_AWREGION.bind(*p_37_m_aximm_AWREGION);
        p_37_m_aximm_AWREGION->set_sv_netview_offsetfromdp(7740688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_aximm_AWQOS.bind(*p_37_m_aximm_AWQOS);
        p_37_m_aximm_AWQOS->set_sv_netview_offsetfromdp(7740744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_aximm_AWUSER.bind(*p_37_m_aximm_AWUSER);
        p_37_m_aximm_AWUSER->set_sv_netview_offsetfromdp(7740800);
        xsim_sc_channel<0, bool > *p_37_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_WVALID.bind(*p_37_m_aximm_WVALID);
        p_37_m_aximm_WVALID->set_sv_netview_offsetfromdp(7740856);
        xsim_sc_channel<0, bool > *p_37_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_WREADY.bind(*p_37_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_aximm_WDATA.bind(*p_37_m_aximm_WDATA);
        p_37_m_aximm_WDATA->set_sv_netview_offsetfromdp(7740968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_aximm_WSTRB.bind(*p_37_m_aximm_WSTRB);
        p_37_m_aximm_WSTRB->set_sv_netview_offsetfromdp(7741024);
        xsim_sc_channel<0, bool > *p_37_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_WLAST.bind(*p_37_m_aximm_WLAST);
        p_37_m_aximm_WLAST->set_sv_netview_offsetfromdp(7741080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_aximm_WUSER.bind(*p_37_m_aximm_WUSER);
        p_37_m_aximm_WUSER->set_sv_netview_offsetfromdp(7741136);
        xsim_sc_channel<0, bool > *p_37_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_ARVALID.bind(*p_37_m_aximm_ARVALID);
        p_37_m_aximm_ARVALID->set_sv_netview_offsetfromdp(7741192);
        xsim_sc_channel<0, bool > *p_37_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_ARREADY.bind(*p_37_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->m_aximm_ARADDR.bind(*p_37_m_aximm_ARADDR);
        p_37_m_aximm_ARADDR->set_sv_netview_offsetfromdp(7741304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_aximm_ARID.bind(*p_37_m_aximm_ARID);
        p_37_m_aximm_ARID->set_sv_netview_offsetfromdp(7741360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->m_aximm_ARLEN.bind(*p_37_m_aximm_ARLEN);
        p_37_m_aximm_ARLEN->set_sv_netview_offsetfromdp(7741416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_aximm_ARSIZE.bind(*p_37_m_aximm_ARSIZE);
        p_37_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(7741472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_aximm_ARBURST.bind(*p_37_m_aximm_ARBURST);
        p_37_m_aximm_ARBURST->set_sv_netview_offsetfromdp(7741528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_aximm_ARLOCK.bind(*p_37_m_aximm_ARLOCK);
        p_37_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(7741584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_aximm_ARCACHE.bind(*p_37_m_aximm_ARCACHE);
        p_37_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(7741640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->m_aximm_ARPROT.bind(*p_37_m_aximm_ARPROT);
        p_37_m_aximm_ARPROT->set_sv_netview_offsetfromdp(7741696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_aximm_ARREGION.bind(*p_37_m_aximm_ARREGION);
        p_37_m_aximm_ARREGION->set_sv_netview_offsetfromdp(7741752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->m_aximm_ARQOS.bind(*p_37_m_aximm_ARQOS);
        p_37_m_aximm_ARQOS->set_sv_netview_offsetfromdp(7741808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_aximm_ARUSER.bind(*p_37_m_aximm_ARUSER);
        p_37_m_aximm_ARUSER->set_sv_netview_offsetfromdp(7741864);
        xsim_sc_channel<0, bool > *p_37_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_RVALID.bind(*p_37_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_37_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_RREADY.bind(*p_37_m_aximm_RREADY);
        p_37_m_aximm_RREADY->set_sv_netview_offsetfromdp(7741976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_aximm_RDATA.bind(*p_37_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_37_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_RLAST.bind(*p_37_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_aximm_RID.bind(*p_37_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_aximm_RRESP.bind(*p_37_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->m_aximm_RUSER.bind(*p_37_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_37_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_BVALID.bind(*p_37_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_37_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_37->m_aximm_BREADY.bind(*p_37_m_aximm_BREADY);
        p_37_m_aximm_BREADY->set_sv_netview_offsetfromdp(7742368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->m_aximm_BRESP.bind(*p_37_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_aximm_BID.bind(*p_37_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->m_aximm_BUSER.bind(*p_37_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_37_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->s_axi_awaddr.bind(*p_37_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->s_axi_awlen.bind(*p_37_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_awsize.bind(*p_37_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_awburst.bind(*p_37_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->s_axi_awlock.bind(*p_37_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_awcache.bind(*p_37_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_awprot.bind(*p_37_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_awregion.bind(*p_37_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_awqos.bind(*p_37_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_37_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_awvalid.bind(*p_37_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_awready.bind(*p_37_s_axi_awready);
        p_37_s_axi_awready->set_sv_netview_offsetfromdp(7743152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->s_axi_wdata.bind(*p_37_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_wstrb.bind(*p_37_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_37_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wlast.bind(*p_37_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_37_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wvalid.bind(*p_37_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_wready.bind(*p_37_s_axi_wready);
        p_37_s_axi_wready->set_sv_netview_offsetfromdp(7743432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_bresp.bind(*p_37_s_axi_bresp);
        p_37_s_axi_bresp->set_sv_netview_offsetfromdp(7743488);
        xsim_sc_channel<0, bool > *p_37_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_bvalid.bind(*p_37_s_axi_bvalid);
        p_37_s_axi_bvalid->set_sv_netview_offsetfromdp(7743544);
        xsim_sc_channel<0, bool > *p_37_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_bready.bind(*p_37_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->s_axi_araddr.bind(*p_37_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->s_axi_arlen.bind(*p_37_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_arsize.bind(*p_37_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_arburst.bind(*p_37_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->s_axi_arlock.bind(*p_37_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_arcache.bind(*p_37_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->s_axi_arprot.bind(*p_37_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_arregion.bind(*p_37_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->s_axi_arqos.bind(*p_37_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_37_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_arvalid.bind(*p_37_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_37_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_arready.bind(*p_37_s_axi_arready);
        p_37_s_axi_arready->set_sv_netview_offsetfromdp(7744216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_37_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_37->s_axi_rdata.bind(*p_37_s_axi_rdata);
        p_37_s_axi_rdata->set_sv_netview_offsetfromdp(7744272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->s_axi_rresp.bind(*p_37_s_axi_rresp);
        p_37_s_axi_rresp->set_sv_netview_offsetfromdp(7744328);
        xsim_sc_channel<0, bool > *p_37_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rlast.bind(*p_37_s_axi_rlast);
        p_37_s_axi_rlast->set_sv_netview_offsetfromdp(7744384);
        xsim_sc_channel<0, bool > *p_37_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rvalid.bind(*p_37_s_axi_rvalid);
        p_37_s_axi_rvalid->set_sv_netview_offsetfromdp(7744440);
        xsim_sc_channel<0, bool > *p_37_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->s_axi_rready.bind(*p_37_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_37_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_37->usr_irq_req.bind(*p_37_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_37_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_37_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_37->usr_irq_ack.bind(*p_37_usr_irq_ack);
        p_37_usr_irq_ack->set_sv_netview_offsetfromdp(7744608);
        sc_inst_38 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_38->xsim_set_dbg_index(450);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awid.bind(*p_38_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S00_AXI_awaddr.bind(*p_38_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_awlen.bind(*p_38_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awsize.bind(*p_38_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_awburst.bind(*p_38_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_awlock.bind(*p_38_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awcache.bind(*p_38_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_awprot.bind(*p_38_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_awqos.bind(*p_38_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S00_AXI_awuser.bind(*p_38_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awvalid.bind(*p_38_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_awready.bind(*p_38_S00_AXI_awready);
        p_38_S00_AXI_awready->set_sv_netview_offsetfromdp(7745440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S00_AXI_wdata.bind(*p_38_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_wstrb.bind(*p_38_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wlast.bind(*p_38_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S00_AXI_wuser.bind(*p_38_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wvalid.bind(*p_38_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_wready.bind(*p_38_S00_AXI_wready);
        p_38_S00_AXI_wready->set_sv_netview_offsetfromdp(7745776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_bid.bind(*p_38_S00_AXI_bid);
        p_38_S00_AXI_bid->set_sv_netview_offsetfromdp(7745832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_bresp.bind(*p_38_S00_AXI_bresp);
        p_38_S00_AXI_bresp->set_sv_netview_offsetfromdp(7745888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_buser.bind(*p_38_S00_AXI_buser);
        p_38_S00_AXI_buser->set_sv_netview_offsetfromdp(7745944);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bvalid.bind(*p_38_S00_AXI_bvalid);
        p_38_S00_AXI_bvalid->set_sv_netview_offsetfromdp(7746000);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_bready.bind(*p_38_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arid.bind(*p_38_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S00_AXI_araddr.bind(*p_38_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S00_AXI_arlen.bind(*p_38_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arsize.bind(*p_38_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_arburst.bind(*p_38_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_arlock.bind(*p_38_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arcache.bind(*p_38_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S00_AXI_arprot.bind(*p_38_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S00_AXI_arqos.bind(*p_38_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S00_AXI_aruser.bind(*p_38_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arvalid.bind(*p_38_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_arready.bind(*p_38_S00_AXI_arready);
        p_38_S00_AXI_arready->set_sv_netview_offsetfromdp(7746728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S00_AXI_rid.bind(*p_38_S00_AXI_rid);
        p_38_S00_AXI_rid->set_sv_netview_offsetfromdp(7746784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S00_AXI_rdata.bind(*p_38_S00_AXI_rdata);
        p_38_S00_AXI_rdata->set_sv_netview_offsetfromdp(7746840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S00_AXI_rresp.bind(*p_38_S00_AXI_rresp);
        p_38_S00_AXI_rresp->set_sv_netview_offsetfromdp(7746896);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rlast.bind(*p_38_S00_AXI_rlast);
        p_38_S00_AXI_rlast->set_sv_netview_offsetfromdp(7746952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S00_AXI_ruser.bind(*p_38_S00_AXI_ruser);
        p_38_S00_AXI_ruser->set_sv_netview_offsetfromdp(7747008);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rvalid.bind(*p_38_S00_AXI_rvalid);
        p_38_S00_AXI_rvalid->set_sv_netview_offsetfromdp(7747064);
        xsim_sc_channel<0, bool > *p_38_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S00_AXI_rready.bind(*p_38_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S01_AXI_awid.bind(*p_38_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S01_AXI_awaddr.bind(*p_38_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S01_AXI_awlen.bind(*p_38_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S01_AXI_awsize.bind(*p_38_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S01_AXI_awburst.bind(*p_38_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S01_AXI_awlock.bind(*p_38_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_awcache.bind(*p_38_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S01_AXI_awprot.bind(*p_38_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_awqos.bind(*p_38_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_awuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_awuser.bind(*p_38_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awuser);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_awvalid.bind(*p_38_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_awready.bind(*p_38_S01_AXI_awready);
        p_38_S01_AXI_awready->set_sv_netview_offsetfromdp(7747792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S01_AXI_wdata.bind(*p_38_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_wstrb.bind(*p_38_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_wlast.bind(*p_38_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_wlast);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_wuser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_wuser.bind(*p_38_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_wuser);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_wvalid.bind(*p_38_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_wready.bind(*p_38_S01_AXI_wready);
        p_38_S01_AXI_wready->set_sv_netview_offsetfromdp(7748128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S01_AXI_bid.bind(*p_38_S01_AXI_bid);
        p_38_S01_AXI_bid->set_sv_netview_offsetfromdp(7748184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S01_AXI_bresp.bind(*p_38_S01_AXI_bresp);
        p_38_S01_AXI_bresp->set_sv_netview_offsetfromdp(7748240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_buser.bind(*p_38_S01_AXI_buser);
        p_38_S01_AXI_buser->set_sv_netview_offsetfromdp(7748296);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_bvalid.bind(*p_38_S01_AXI_bvalid);
        p_38_S01_AXI_bvalid->set_sv_netview_offsetfromdp(7748352);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_bready.bind(*p_38_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S01_AXI_arid.bind(*p_38_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->S01_AXI_araddr.bind(*p_38_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->S01_AXI_arlen.bind(*p_38_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S01_AXI_arsize.bind(*p_38_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S01_AXI_arburst.bind(*p_38_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S01_AXI_arlock.bind(*p_38_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_arcache.bind(*p_38_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->S01_AXI_arprot.bind(*p_38_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_arqos.bind(*p_38_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_aruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_aruser.bind(*p_38_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_aruser);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_arvalid.bind(*p_38_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_arready.bind(*p_38_S01_AXI_arready);
        p_38_S01_AXI_arready->set_sv_netview_offsetfromdp(7749080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->S01_AXI_rid.bind(*p_38_S01_AXI_rid);
        p_38_S01_AXI_rid->set_sv_netview_offsetfromdp(7749136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->S01_AXI_rdata.bind(*p_38_S01_AXI_rdata);
        p_38_S01_AXI_rdata->set_sv_netview_offsetfromdp(7749192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->S01_AXI_rresp.bind(*p_38_S01_AXI_rresp);
        p_38_S01_AXI_rresp->set_sv_netview_offsetfromdp(7749248);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_rlast.bind(*p_38_S01_AXI_rlast);
        p_38_S01_AXI_rlast->set_sv_netview_offsetfromdp(7749304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_S01_AXI_ruser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->S01_AXI_ruser.bind(*p_38_S01_AXI_ruser);
        p_38_S01_AXI_ruser->set_sv_netview_offsetfromdp(7749360);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_rvalid.bind(*p_38_S01_AXI_rvalid);
        p_38_S01_AXI_rvalid->set_sv_netview_offsetfromdp(7749416);
        xsim_sc_channel<0, bool > *p_38_S01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->S01_AXI_rready.bind(*p_38_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_S01_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_awaddr.bind(*p_38_M00_AXI_awaddr);
        p_38_M00_AXI_awaddr->set_sv_netview_offsetfromdp(7749528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_awlen.bind(*p_38_M00_AXI_awlen);
        p_38_M00_AXI_awlen->set_sv_netview_offsetfromdp(7749584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awsize.bind(*p_38_M00_AXI_awsize);
        p_38_M00_AXI_awsize->set_sv_netview_offsetfromdp(7749640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_awburst.bind(*p_38_M00_AXI_awburst);
        p_38_M00_AXI_awburst->set_sv_netview_offsetfromdp(7749696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_awlock.bind(*p_38_M00_AXI_awlock);
        p_38_M00_AXI_awlock->set_sv_netview_offsetfromdp(7749752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awcache.bind(*p_38_M00_AXI_awcache);
        p_38_M00_AXI_awcache->set_sv_netview_offsetfromdp(7749808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_awprot.bind(*p_38_M00_AXI_awprot);
        p_38_M00_AXI_awprot->set_sv_netview_offsetfromdp(7749864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_awqos.bind(*p_38_M00_AXI_awqos);
        p_38_M00_AXI_awqos->set_sv_netview_offsetfromdp(7749920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_awuser.bind(*p_38_M00_AXI_awuser);
        p_38_M00_AXI_awuser->set_sv_netview_offsetfromdp(7749976);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awvalid.bind(*p_38_M00_AXI_awvalid);
        p_38_M00_AXI_awvalid->set_sv_netview_offsetfromdp(7750032);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_awready.bind(*p_38_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_wdata.bind(*p_38_M00_AXI_wdata);
        p_38_M00_AXI_wdata->set_sv_netview_offsetfromdp(7750144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_wstrb.bind(*p_38_M00_AXI_wstrb);
        p_38_M00_AXI_wstrb->set_sv_netview_offsetfromdp(7750200);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wlast.bind(*p_38_M00_AXI_wlast);
        p_38_M00_AXI_wlast->set_sv_netview_offsetfromdp(7750256);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wvalid.bind(*p_38_M00_AXI_wvalid);
        p_38_M00_AXI_wvalid->set_sv_netview_offsetfromdp(7750312);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_wready.bind(*p_38_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_bresp.bind(*p_38_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_buser.bind(*p_38_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bvalid.bind(*p_38_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_bready.bind(*p_38_M00_AXI_bready);
        p_38_M00_AXI_bready->set_sv_netview_offsetfromdp(7750592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_araddr.bind(*p_38_M00_AXI_araddr);
        p_38_M00_AXI_araddr->set_sv_netview_offsetfromdp(7750648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M00_AXI_arlen.bind(*p_38_M00_AXI_arlen);
        p_38_M00_AXI_arlen->set_sv_netview_offsetfromdp(7750704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arsize.bind(*p_38_M00_AXI_arsize);
        p_38_M00_AXI_arsize->set_sv_netview_offsetfromdp(7750760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_arburst.bind(*p_38_M00_AXI_arburst);
        p_38_M00_AXI_arburst->set_sv_netview_offsetfromdp(7750816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M00_AXI_arlock.bind(*p_38_M00_AXI_arlock);
        p_38_M00_AXI_arlock->set_sv_netview_offsetfromdp(7750872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arcache.bind(*p_38_M00_AXI_arcache);
        p_38_M00_AXI_arcache->set_sv_netview_offsetfromdp(7750928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M00_AXI_arprot.bind(*p_38_M00_AXI_arprot);
        p_38_M00_AXI_arprot->set_sv_netview_offsetfromdp(7750984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M00_AXI_arqos.bind(*p_38_M00_AXI_arqos);
        p_38_M00_AXI_arqos->set_sv_netview_offsetfromdp(7751040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_aruser.bind(*p_38_M00_AXI_aruser);
        p_38_M00_AXI_aruser->set_sv_netview_offsetfromdp(7751096);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arvalid.bind(*p_38_M00_AXI_arvalid);
        p_38_M00_AXI_arvalid->set_sv_netview_offsetfromdp(7751152);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_arready.bind(*p_38_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M00_AXI_rdata.bind(*p_38_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M00_AXI_rresp.bind(*p_38_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rlast.bind(*p_38_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rvalid.bind(*p_38_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M00_AXI_rready.bind(*p_38_M00_AXI_rready);
        p_38_M00_AXI_rready->set_sv_netview_offsetfromdp(7751488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M01_AXI_awaddr.bind(*p_38_M01_AXI_awaddr);
        p_38_M01_AXI_awaddr->set_sv_netview_offsetfromdp(7751544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M01_AXI_awlen.bind(*p_38_M01_AXI_awlen);
        p_38_M01_AXI_awlen->set_sv_netview_offsetfromdp(7751600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M01_AXI_awsize.bind(*p_38_M01_AXI_awsize);
        p_38_M01_AXI_awsize->set_sv_netview_offsetfromdp(7751656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M01_AXI_awburst.bind(*p_38_M01_AXI_awburst);
        p_38_M01_AXI_awburst->set_sv_netview_offsetfromdp(7751712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M01_AXI_awlock.bind(*p_38_M01_AXI_awlock);
        p_38_M01_AXI_awlock->set_sv_netview_offsetfromdp(7751768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_awcache.bind(*p_38_M01_AXI_awcache);
        p_38_M01_AXI_awcache->set_sv_netview_offsetfromdp(7751824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M01_AXI_awprot.bind(*p_38_M01_AXI_awprot);
        p_38_M01_AXI_awprot->set_sv_netview_offsetfromdp(7751880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_awqos.bind(*p_38_M01_AXI_awqos);
        p_38_M01_AXI_awqos->set_sv_netview_offsetfromdp(7751936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M01_AXI_awuser.bind(*p_38_M01_AXI_awuser);
        p_38_M01_AXI_awuser->set_sv_netview_offsetfromdp(7751992);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_awvalid.bind(*p_38_M01_AXI_awvalid);
        p_38_M01_AXI_awvalid->set_sv_netview_offsetfromdp(7752048);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_awready.bind(*p_38_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M01_AXI_wdata.bind(*p_38_M01_AXI_wdata);
        p_38_M01_AXI_wdata->set_sv_netview_offsetfromdp(7752160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_wstrb.bind(*p_38_M01_AXI_wstrb);
        p_38_M01_AXI_wstrb->set_sv_netview_offsetfromdp(7752216);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_wlast.bind(*p_38_M01_AXI_wlast);
        p_38_M01_AXI_wlast->set_sv_netview_offsetfromdp(7752272);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_wvalid.bind(*p_38_M01_AXI_wvalid);
        p_38_M01_AXI_wvalid->set_sv_netview_offsetfromdp(7752328);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_wready.bind(*p_38_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M01_AXI_bresp.bind(*p_38_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_buser.bind(*p_38_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_bvalid.bind(*p_38_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_bready.bind(*p_38_M01_AXI_bready);
        p_38_M01_AXI_bready->set_sv_netview_offsetfromdp(7752608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M01_AXI_araddr.bind(*p_38_M01_AXI_araddr);
        p_38_M01_AXI_araddr->set_sv_netview_offsetfromdp(7752664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M01_AXI_arlen.bind(*p_38_M01_AXI_arlen);
        p_38_M01_AXI_arlen->set_sv_netview_offsetfromdp(7752720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M01_AXI_arsize.bind(*p_38_M01_AXI_arsize);
        p_38_M01_AXI_arsize->set_sv_netview_offsetfromdp(7752776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M01_AXI_arburst.bind(*p_38_M01_AXI_arburst);
        p_38_M01_AXI_arburst->set_sv_netview_offsetfromdp(7752832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M01_AXI_arlock.bind(*p_38_M01_AXI_arlock);
        p_38_M01_AXI_arlock->set_sv_netview_offsetfromdp(7752888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_arcache.bind(*p_38_M01_AXI_arcache);
        p_38_M01_AXI_arcache->set_sv_netview_offsetfromdp(7752944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M01_AXI_arprot.bind(*p_38_M01_AXI_arprot);
        p_38_M01_AXI_arprot->set_sv_netview_offsetfromdp(7753000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M01_AXI_arqos.bind(*p_38_M01_AXI_arqos);
        p_38_M01_AXI_arqos->set_sv_netview_offsetfromdp(7753056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M01_AXI_aruser.bind(*p_38_M01_AXI_aruser);
        p_38_M01_AXI_aruser->set_sv_netview_offsetfromdp(7753112);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_arvalid.bind(*p_38_M01_AXI_arvalid);
        p_38_M01_AXI_arvalid->set_sv_netview_offsetfromdp(7753168);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_arready.bind(*p_38_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M01_AXI_rdata.bind(*p_38_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M01_AXI_rresp.bind(*p_38_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_rlast.bind(*p_38_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_rvalid.bind(*p_38_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M01_AXI_rready.bind(*p_38_M01_AXI_rready);
        p_38_M01_AXI_rready->set_sv_netview_offsetfromdp(7753504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M02_AXI_awaddr.bind(*p_38_M02_AXI_awaddr);
        p_38_M02_AXI_awaddr->set_sv_netview_offsetfromdp(7753560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M02_AXI_awlen.bind(*p_38_M02_AXI_awlen);
        p_38_M02_AXI_awlen->set_sv_netview_offsetfromdp(7753616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M02_AXI_awsize.bind(*p_38_M02_AXI_awsize);
        p_38_M02_AXI_awsize->set_sv_netview_offsetfromdp(7753672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M02_AXI_awburst.bind(*p_38_M02_AXI_awburst);
        p_38_M02_AXI_awburst->set_sv_netview_offsetfromdp(7753728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M02_AXI_awlock.bind(*p_38_M02_AXI_awlock);
        p_38_M02_AXI_awlock->set_sv_netview_offsetfromdp(7753784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_awcache.bind(*p_38_M02_AXI_awcache);
        p_38_M02_AXI_awcache->set_sv_netview_offsetfromdp(7753840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M02_AXI_awprot.bind(*p_38_M02_AXI_awprot);
        p_38_M02_AXI_awprot->set_sv_netview_offsetfromdp(7753896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_awqos.bind(*p_38_M02_AXI_awqos);
        p_38_M02_AXI_awqos->set_sv_netview_offsetfromdp(7753952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M02_AXI_awuser.bind(*p_38_M02_AXI_awuser);
        p_38_M02_AXI_awuser->set_sv_netview_offsetfromdp(7754008);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_awvalid.bind(*p_38_M02_AXI_awvalid);
        p_38_M02_AXI_awvalid->set_sv_netview_offsetfromdp(7754064);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_awready.bind(*p_38_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M02_AXI_wdata.bind(*p_38_M02_AXI_wdata);
        p_38_M02_AXI_wdata->set_sv_netview_offsetfromdp(7754176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_wstrb.bind(*p_38_M02_AXI_wstrb);
        p_38_M02_AXI_wstrb->set_sv_netview_offsetfromdp(7754232);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_wlast.bind(*p_38_M02_AXI_wlast);
        p_38_M02_AXI_wlast->set_sv_netview_offsetfromdp(7754288);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_wvalid.bind(*p_38_M02_AXI_wvalid);
        p_38_M02_AXI_wvalid->set_sv_netview_offsetfromdp(7754344);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_wready.bind(*p_38_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M02_AXI_bresp.bind(*p_38_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_buser.bind(*p_38_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_bvalid.bind(*p_38_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_bready.bind(*p_38_M02_AXI_bready);
        p_38_M02_AXI_bready->set_sv_netview_offsetfromdp(7754624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M02_AXI_araddr.bind(*p_38_M02_AXI_araddr);
        p_38_M02_AXI_araddr->set_sv_netview_offsetfromdp(7754680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M02_AXI_arlen.bind(*p_38_M02_AXI_arlen);
        p_38_M02_AXI_arlen->set_sv_netview_offsetfromdp(7754736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M02_AXI_arsize.bind(*p_38_M02_AXI_arsize);
        p_38_M02_AXI_arsize->set_sv_netview_offsetfromdp(7754792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M02_AXI_arburst.bind(*p_38_M02_AXI_arburst);
        p_38_M02_AXI_arburst->set_sv_netview_offsetfromdp(7754848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M02_AXI_arlock.bind(*p_38_M02_AXI_arlock);
        p_38_M02_AXI_arlock->set_sv_netview_offsetfromdp(7754904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_arcache.bind(*p_38_M02_AXI_arcache);
        p_38_M02_AXI_arcache->set_sv_netview_offsetfromdp(7754960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M02_AXI_arprot.bind(*p_38_M02_AXI_arprot);
        p_38_M02_AXI_arprot->set_sv_netview_offsetfromdp(7755016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M02_AXI_arqos.bind(*p_38_M02_AXI_arqos);
        p_38_M02_AXI_arqos->set_sv_netview_offsetfromdp(7755072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M02_AXI_aruser.bind(*p_38_M02_AXI_aruser);
        p_38_M02_AXI_aruser->set_sv_netview_offsetfromdp(7755128);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_arvalid.bind(*p_38_M02_AXI_arvalid);
        p_38_M02_AXI_arvalid->set_sv_netview_offsetfromdp(7755184);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_arready.bind(*p_38_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M02_AXI_rdata.bind(*p_38_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M02_AXI_rresp.bind(*p_38_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_rlast.bind(*p_38_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_rvalid.bind(*p_38_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M02_AXI_rready.bind(*p_38_M02_AXI_rready);
        p_38_M02_AXI_rready->set_sv_netview_offsetfromdp(7755520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M03_AXI_awaddr.bind(*p_38_M03_AXI_awaddr);
        p_38_M03_AXI_awaddr->set_sv_netview_offsetfromdp(7755576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M03_AXI_awlen.bind(*p_38_M03_AXI_awlen);
        p_38_M03_AXI_awlen->set_sv_netview_offsetfromdp(7755632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M03_AXI_awsize.bind(*p_38_M03_AXI_awsize);
        p_38_M03_AXI_awsize->set_sv_netview_offsetfromdp(7755688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M03_AXI_awburst.bind(*p_38_M03_AXI_awburst);
        p_38_M03_AXI_awburst->set_sv_netview_offsetfromdp(7755744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M03_AXI_awlock.bind(*p_38_M03_AXI_awlock);
        p_38_M03_AXI_awlock->set_sv_netview_offsetfromdp(7755800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_awcache.bind(*p_38_M03_AXI_awcache);
        p_38_M03_AXI_awcache->set_sv_netview_offsetfromdp(7755856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M03_AXI_awprot.bind(*p_38_M03_AXI_awprot);
        p_38_M03_AXI_awprot->set_sv_netview_offsetfromdp(7755912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_awqos.bind(*p_38_M03_AXI_awqos);
        p_38_M03_AXI_awqos->set_sv_netview_offsetfromdp(7755968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M03_AXI_awuser.bind(*p_38_M03_AXI_awuser);
        p_38_M03_AXI_awuser->set_sv_netview_offsetfromdp(7756024);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_awvalid.bind(*p_38_M03_AXI_awvalid);
        p_38_M03_AXI_awvalid->set_sv_netview_offsetfromdp(7756080);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_awready.bind(*p_38_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M03_AXI_wdata.bind(*p_38_M03_AXI_wdata);
        p_38_M03_AXI_wdata->set_sv_netview_offsetfromdp(7756192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_wstrb.bind(*p_38_M03_AXI_wstrb);
        p_38_M03_AXI_wstrb->set_sv_netview_offsetfromdp(7756248);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_wlast.bind(*p_38_M03_AXI_wlast);
        p_38_M03_AXI_wlast->set_sv_netview_offsetfromdp(7756304);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_wvalid.bind(*p_38_M03_AXI_wvalid);
        p_38_M03_AXI_wvalid->set_sv_netview_offsetfromdp(7756360);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_wready.bind(*p_38_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M03_AXI_bresp.bind(*p_38_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_buser.bind(*p_38_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_bvalid.bind(*p_38_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_bready.bind(*p_38_M03_AXI_bready);
        p_38_M03_AXI_bready->set_sv_netview_offsetfromdp(7756640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M03_AXI_araddr.bind(*p_38_M03_AXI_araddr);
        p_38_M03_AXI_araddr->set_sv_netview_offsetfromdp(7756696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M03_AXI_arlen.bind(*p_38_M03_AXI_arlen);
        p_38_M03_AXI_arlen->set_sv_netview_offsetfromdp(7756752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M03_AXI_arsize.bind(*p_38_M03_AXI_arsize);
        p_38_M03_AXI_arsize->set_sv_netview_offsetfromdp(7756808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M03_AXI_arburst.bind(*p_38_M03_AXI_arburst);
        p_38_M03_AXI_arburst->set_sv_netview_offsetfromdp(7756864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M03_AXI_arlock.bind(*p_38_M03_AXI_arlock);
        p_38_M03_AXI_arlock->set_sv_netview_offsetfromdp(7756920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_arcache.bind(*p_38_M03_AXI_arcache);
        p_38_M03_AXI_arcache->set_sv_netview_offsetfromdp(7756976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M03_AXI_arprot.bind(*p_38_M03_AXI_arprot);
        p_38_M03_AXI_arprot->set_sv_netview_offsetfromdp(7757032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M03_AXI_arqos.bind(*p_38_M03_AXI_arqos);
        p_38_M03_AXI_arqos->set_sv_netview_offsetfromdp(7757088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M03_AXI_aruser.bind(*p_38_M03_AXI_aruser);
        p_38_M03_AXI_aruser->set_sv_netview_offsetfromdp(7757144);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_arvalid.bind(*p_38_M03_AXI_arvalid);
        p_38_M03_AXI_arvalid->set_sv_netview_offsetfromdp(7757200);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_arready.bind(*p_38_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M03_AXI_rdata.bind(*p_38_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M03_AXI_rresp.bind(*p_38_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_rlast.bind(*p_38_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_rvalid.bind(*p_38_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M03_AXI_rready.bind(*p_38_M03_AXI_rready);
        p_38_M03_AXI_rready->set_sv_netview_offsetfromdp(7757536);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M04_AXI_awaddr.bind(*p_38_M04_AXI_awaddr);
        p_38_M04_AXI_awaddr->set_sv_netview_offsetfromdp(7757592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M04_AXI_awlen.bind(*p_38_M04_AXI_awlen);
        p_38_M04_AXI_awlen->set_sv_netview_offsetfromdp(7757648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M04_AXI_awsize.bind(*p_38_M04_AXI_awsize);
        p_38_M04_AXI_awsize->set_sv_netview_offsetfromdp(7757704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M04_AXI_awburst.bind(*p_38_M04_AXI_awburst);
        p_38_M04_AXI_awburst->set_sv_netview_offsetfromdp(7757760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M04_AXI_awlock.bind(*p_38_M04_AXI_awlock);
        p_38_M04_AXI_awlock->set_sv_netview_offsetfromdp(7757816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_awcache.bind(*p_38_M04_AXI_awcache);
        p_38_M04_AXI_awcache->set_sv_netview_offsetfromdp(7757872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M04_AXI_awprot.bind(*p_38_M04_AXI_awprot);
        p_38_M04_AXI_awprot->set_sv_netview_offsetfromdp(7757928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_awqos.bind(*p_38_M04_AXI_awqos);
        p_38_M04_AXI_awqos->set_sv_netview_offsetfromdp(7757984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M04_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M04_AXI_awuser.bind(*p_38_M04_AXI_awuser);
        p_38_M04_AXI_awuser->set_sv_netview_offsetfromdp(7758040);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_awvalid.bind(*p_38_M04_AXI_awvalid);
        p_38_M04_AXI_awvalid->set_sv_netview_offsetfromdp(7758096);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_awready.bind(*p_38_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M04_AXI_wdata.bind(*p_38_M04_AXI_wdata);
        p_38_M04_AXI_wdata->set_sv_netview_offsetfromdp(7758208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_wstrb.bind(*p_38_M04_AXI_wstrb);
        p_38_M04_AXI_wstrb->set_sv_netview_offsetfromdp(7758264);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_wlast.bind(*p_38_M04_AXI_wlast);
        p_38_M04_AXI_wlast->set_sv_netview_offsetfromdp(7758320);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_wvalid.bind(*p_38_M04_AXI_wvalid);
        p_38_M04_AXI_wvalid->set_sv_netview_offsetfromdp(7758376);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_wready.bind(*p_38_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M04_AXI_bresp.bind(*p_38_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_buser = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_buser.bind(*p_38_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_bvalid.bind(*p_38_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_bready.bind(*p_38_M04_AXI_bready);
        p_38_M04_AXI_bready->set_sv_netview_offsetfromdp(7758656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_38_M04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_38->M04_AXI_araddr.bind(*p_38_M04_AXI_araddr);
        p_38_M04_AXI_araddr->set_sv_netview_offsetfromdp(7758712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_38_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_38->M04_AXI_arlen.bind(*p_38_M04_AXI_arlen);
        p_38_M04_AXI_arlen->set_sv_netview_offsetfromdp(7758768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M04_AXI_arsize.bind(*p_38_M04_AXI_arsize);
        p_38_M04_AXI_arsize->set_sv_netview_offsetfromdp(7758824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M04_AXI_arburst.bind(*p_38_M04_AXI_arburst);
        p_38_M04_AXI_arburst->set_sv_netview_offsetfromdp(7758880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_38_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_38->M04_AXI_arlock.bind(*p_38_M04_AXI_arlock);
        p_38_M04_AXI_arlock->set_sv_netview_offsetfromdp(7758936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_arcache.bind(*p_38_M04_AXI_arcache);
        p_38_M04_AXI_arcache->set_sv_netview_offsetfromdp(7758992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->M04_AXI_arprot.bind(*p_38_M04_AXI_arprot);
        p_38_M04_AXI_arprot->set_sv_netview_offsetfromdp(7759048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->M04_AXI_arqos.bind(*p_38_M04_AXI_arqos);
        p_38_M04_AXI_arqos->set_sv_netview_offsetfromdp(7759104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M04_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M04_AXI_aruser.bind(*p_38_M04_AXI_aruser);
        p_38_M04_AXI_aruser->set_sv_netview_offsetfromdp(7759160);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_arvalid.bind(*p_38_M04_AXI_arvalid);
        p_38_M04_AXI_arvalid->set_sv_netview_offsetfromdp(7759216);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_arready.bind(*p_38_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_M04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->M04_AXI_rdata.bind(*p_38_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->M04_AXI_rresp.bind(*p_38_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_rlast.bind(*p_38_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rlast);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_rvalid.bind(*p_38_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_38_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->M04_AXI_rready.bind(*p_38_M04_AXI_rready);
        p_38_M04_AXI_rready->set_sv_netview_offsetfromdp(7759552);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
    }
