//File Automatically generated by SystemC Netlister Time
#include "bd_d216_sci.h"
bd_d216_sci::bd_d216_sci(const sc_module_name& module_name) : xsc::utils::xsc_sim_conn_base(module_name) 
{
	//Exported sockets Instantiation
	xsc::utils::xsc_sim_manager::addAssociateInstanceParameter("bd_d216_sci","S01_AXI_tlm_MODE",0,"bd_d216_interconnect_M00_AXI_MEM00_0","S00_AXI_tlm_MODE");
	
	xsc::utils::xsc_sim_manager::addAssociateInstanceParameter("bd_d216_sci","S01_AXI_tlm_MODE",0,"bd_d216_interconnect_M00_AXI_MEM00_0","S00_AXI_tlm_MODE");
	
	xsc::utils::xsc_sim_manager::addAssociateInstanceParameter("bd_d216_sci","S04_AXI_tlm_MODE",0,"bd_d216_interconnect_M00_AXI_MEM00_0","S01_AXI_tlm_MODE");
	
	xsc::utils::xsc_sim_manager::addAssociateInstanceParameter("bd_d216_sci","S04_AXI_tlm_MODE",0,"bd_d216_interconnect_M00_AXI_MEM00_0","S01_AXI_tlm_MODE");
	
	xsc::utils::xsc_sim_manager::addAssociateInstanceParameter("bd_d216_sci","M00_AXI_tlm_MODE",0,"bd_d216_rs_M00_AXI_0","M_AXI_TLM_MODE");
	
	xsc::utils::xsc_sim_manager::addAssociateInstanceParameter("bd_d216_sci","M00_AXI_tlm_MODE",0,"bd_d216_rs_M00_AXI_0","M_AXI_TLM_MODE");
	
	//Add TLM Parameters
	xsc::utils::xsc_sim_manager::addInstanceConnParameters("bd_d216_interconnect_M00_AXI_MEM00_0","M00_AXI_tlm_MODE","bd_d216_rs_M00_AXI_0","S_AXI_TLM_MODE",1);
	xsc::utils::xsc_sim_manager::addInstanceConnParameters("bd_d216_interconnect_M00_AXI_MEM00_0","M00_AXI_tlm_MODE","bd_d216_rs_M00_AXI_0","S_AXI_TLM_MODE",1);
	xsc::utils::xsc_sim_manager::addInstanceParameter("bd_d216_sci","S_AXI_CTRL_TLM_MODE",-1);
	
	xsc::utils::xsc_sim_manager::addInstance("bd_d216_sci", this);
	#if defined MTI_SYSTEMC && defined XSC_ENABLE_TLM_WAVEFORM
	if(!xsc::utils::xsc_sim_manager::isMTlmWaveDatabaseInit()) {
	xsc::utils::xsc_sim_manager::setMTlmWaveDatabaseInit(true);
	scv_startup(); /* Initialize SCV: */
	scv_tr_wlf_init(); /* Tie databases to WLF: */
	scv_tr_db *txdb = new scv_tr_db("tlmWaveDB");
	if (txdb != NULL)
	  scv_tr_db::set_default_db(txdb);
	}
	#endif
	#if defined XM_SYSTEMC && defined XSC_ENABLE_TLM_WAVEFORM
	if(!xsc::utils::xsc_sim_manager::isMTlmWaveDatabaseInit()){
	xsc::utils::xsc_sim_manager::setMTlmWaveDatabaseInit(true);
	cve_tr_sdi_init();
	scv_tr_db *txdb = new scv_tr_db("tlmWaveDB");
	if (txdb != NULL)
	  scv_tr_db::set_default_db(txdb);
	}
	#endif
}
bd_d216_sci::~bd_d216_sci()
{
}
void bd_d216_sci::initConnModule() {

	bd_d216_interconnect_M00_AXI_MEM00_0_sc*  inst0=dynamic_cast<bd_d216_interconnect_M00_AXI_MEM00_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_interconnect_M00_AXI_MEM00_0"));
	registerTlmSocket("S01_AXI_tlm_aximm_read_socket",inst0->S00_AXI_tlm_aximm_read_socket);
	bd_d216_interconnect_M00_AXI_MEM00_0_sc*  inst1=dynamic_cast<bd_d216_interconnect_M00_AXI_MEM00_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_interconnect_M00_AXI_MEM00_0"));
	registerTlmSocket("S01_AXI_tlm_aximm_write_socket",inst1->S00_AXI_tlm_aximm_write_socket);
	bd_d216_interconnect_M00_AXI_MEM00_0_sc*  inst2=dynamic_cast<bd_d216_interconnect_M00_AXI_MEM00_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_interconnect_M00_AXI_MEM00_0"));
	registerTlmSocket("S04_AXI_tlm_aximm_read_socket",inst2->S01_AXI_tlm_aximm_read_socket);
	bd_d216_interconnect_M00_AXI_MEM00_0_sc*  inst3=dynamic_cast<bd_d216_interconnect_M00_AXI_MEM00_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_interconnect_M00_AXI_MEM00_0"));
	registerTlmSocket("S04_AXI_tlm_aximm_write_socket",inst3->S01_AXI_tlm_aximm_write_socket);
	bd_d216_rs_M00_AXI_0_sc*  inst4=dynamic_cast<bd_d216_rs_M00_AXI_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_rs_M00_AXI_0"));
	registerTlmSocket("M00_AXI_tlm_aximm_read_socket",inst4->M_INITIATOR_rd_socket);
	bd_d216_rs_M00_AXI_0_sc*  inst5=dynamic_cast<bd_d216_rs_M00_AXI_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_rs_M00_AXI_0"));
	registerTlmSocket("M00_AXI_tlm_aximm_write_socket",inst5->M_INITIATOR_wr_socket);
}

void bd_d216_sci::before_end_of_elaboration() {
	
	bd_d216_interconnect_M00_AXI_MEM00_0_sc*  inst_0=dynamic_cast<bd_d216_interconnect_M00_AXI_MEM00_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_interconnect_M00_AXI_MEM00_0"));
	bd_d216_rs_M00_AXI_0_sc*  inst_1=dynamic_cast<bd_d216_rs_M00_AXI_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_rs_M00_AXI_0"));
	xtlm_aximm_transaction_logger* log_inst_0 = new xtlm_aximm_transaction_logger("xtlm_aximm_transaction_logger_0");
	log_inst_0->setProxyRef(inst_0, inst_1, "bd_d216_interconnect_M00_AXI_MEM00_0_M00_AXI_tlm", "bd_d216_rs_M00_AXI_0_S_AXI_TLM", log_inst_0->m_transactionLogger);
	
	if(inst_0==NULL) {
		std::cerr<<"Error: While binding sockets cannot find socket object instance to bind bd_d216_interconnect_M00_AXI_MEM00_0_sc"<<std::endl;
	}
	if(inst_1==NULL) {
		std::cerr<<"Error: While binding sockets cannot find socket object instance to bind bd_d216_rs_M00_AXI_0_sc"<<std::endl;
	}
	
	if (inst_0!=NULL && inst_1!=NULL) {
		inst_0->M00_AXI_tlm_aximm_read_socket->bind(*(log_inst_0->tar_rd_skt));
		log_inst_0->init_rd_skt->bind(*(inst_1->S_TARGET_rd_socket));
	}
	
	bd_d216_interconnect_M00_AXI_MEM00_0_sc*  inst_4=dynamic_cast<bd_d216_interconnect_M00_AXI_MEM00_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_interconnect_M00_AXI_MEM00_0"));
	bd_d216_rs_M00_AXI_0_sc*  inst_5=dynamic_cast<bd_d216_rs_M00_AXI_0_sc*>(xsc::utils::xsc_sim_manager::getInstancePtr("bd_d216_rs_M00_AXI_0"));
	
	if(inst_4==NULL) {
		std::cerr<<"Error: While binding sockets cannot find socket object instance to bind bd_d216_interconnect_M00_AXI_MEM00_0_sc"<<std::endl;
	}
	if(inst_5==NULL) {
		std::cerr<<"Error: While binding sockets cannot find socket object instance to bind bd_d216_rs_M00_AXI_0_sc"<<std::endl;
	}
	
	if (inst_4!=NULL && inst_5!=NULL) {
		inst_4->M00_AXI_tlm_aximm_write_socket->bind(*(log_inst_0->tar_wr_skt));
		log_inst_0->init_wr_skt->bind(*(inst_5->S_TARGET_wr_socket));
	}
	
}
#ifdef MTI_SYSTEMC
SC_MODULE_EXPORT(bd_d216_sci);
#endif

#ifdef XM_SYSTEMC
XMSC_MODULE_EXPORT(bd_d216_sci);
#endif

#ifdef RIVIERA
SC_MODULE_EXPORT(bd_d216_sci);
#endif

